{"version":3,"sources":["components/common/ThemeRadio.js","utils/config.js","components/inputs/AddBoardInput.js","utils/helpers.js","components/dashboard/DashboardItem.js","components/dashboard/NewDashboardItem.js","components/dashboard/BoardsList.js","pages/Dashboard.js","components/buttons/ThemeButton.js","components/buttons/DeleteButton.js","components/board/BoardHeader.js","components/buttons/SaveButton.js","components/board/CardEdit.js","components/board/Card.js","components/board/NewCard.js","components/buttons/ListDeleteButton.js","components/board/List.js","components/board/NewList.js","components/board/BoardLists.js","pages/Board.js","utils/service.js","App.js","registerServiceWorker.js","index.js"],"names":["ThemeRadio","_ref","theme","handleRadioChange","currentTheme","react_default","a","createElement","title","className","concat","toLowerCase","replace","onChange","checked","type","name","value","index_es","icon","faCheck","config","THEMES","AddBoardInput","state","currentBoard","isDisabled","handleChange","e","_this","props","handleInputChange","document","addEventListener","this","handleClick","removeEventListener","_this$props","handleSubmit","handleDelete","onSubmit","onClick","faTimes","autoFocus","map","common_ThemeRadio","key","disabled","React","Component","generateId","str_a","Date","valueOf","toString","Number","slice","findById","id","list","find","item","addItem","Object","toConsumableArray","updateList","updated","updatedItem","findIndex","removeItem","removedIndex","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","droppableId","mapBoardToApi","board","Id","Name","Theme","KanbanLists","lists","boardId","Cards","items","card","Descritpion","desc","StartDate","startDate","EndDate","endDate","DashboardItem","cards","reduce","sum","length","Link","to","elem","limit","after","content","trim","split","join","truncate","NewDashboardItem","BoardsList","boards","dashboard_DashboardItem","assign","dashboard_NewDashboardItem","Dashboard","isInputOpen","errSubmit","keyCode","setState","prevState","val","target","objectSpread","preventDefault","newBoard","handleCreate","handleErrorSubmit","alert","handleDeleteLocal","window","location","reload","_this$state","submit","dashboard_BoardsList","inputs_AddBoardInput","ThemeButton","isOpen","thisRef","createRef","current","contains","_this2","ref","DeleteButton","isAlertOpen","handleRemove","BoardHeader","handleNameChange","upadtedBoard","handleUpdate","handleDisplayChange","display","faArrowLeft","onBlur","buttons_ThemeButton","buttons_DeleteButton","SaveButton","CardEdit","editCard","placeholder","buttons_SaveButton","Card","isEditable","property","defineProperty","handleCardRemove","updatedCard","handleCardEdit","faAlignLeft","faCalendarAlt","faPencilAlt","board_CardEdit","NewCard","newCard","ListDeleteButton","faTrashAlt","List","handleCardChange","updatedCards","updatedList","handleListChange","handleCardSubmit","updatedItems","react_beautiful_dnd_esm","provided","snapshot","isDraggingOver","faHandPaper","buttons_ListDeleteButton","innerRef","draggableId","isDragging","draggableProps","dragHandleProps","style","board_Card","board_NewCard","NewList","newListName","BoardLists","newList","updatedLists","handleListsUpdate","onDragEnd","sourceList","destList","newSourceList","newDestList","direction","droppableProps","board_List","board_NewList","Board","update","updatedBoard","handleAddListChange","handleAddListSubmit","addList","board_BoardHeader","board_BoardLists","baseUrl","createBoard","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","saveBoard","destroyBoard","App","updatedBoards","console","log","mapBoards","_this3","BrowserRouter","basename","process","Switch","Route","exact","path","render","pages_Dashboard","match","params","ifCorrectID","parseInt","pages_Board","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","getElementById","URL","origin","response","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.71ba06e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ThemeRadio = ({theme, handleRadioChange, currentTheme}) => {\r\n    return (\r\n        <label title={theme} className={`theme-radio ${theme.toLowerCase().replace(\" \", \"-\")}`}>\r\n            <input className=\"theme-radio__input\" onChange={handleRadioChange} checked={currentTheme === theme} type=\"radio\" name=\"theme\" value={theme}/>\r\n            <FontAwesomeIcon className=\"theme-radio__icon\" icon={faCheck}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nThemeRadio.propTypes = {\r\n    theme: PropTypes.string.isRequired,\r\n    currentTheme: PropTypes.string.isRequired,\r\n    handleRadioChange: PropTypes.func.isRequired\r\n}\r\n  \r\n\r\nexport default ThemeRadio;","export const config = {\r\n    THEMES: [\"Malibu Beach\", \"New Life\", \"Night Fade\", \"Sunny Morning\", \"Love Kiss\"]\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ThemeRadio from  '../common/ThemeRadio'\r\nimport { config } from '../../utils/config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass AddBoardInput extends React.Component {\r\n    state = {\r\n        currentBoard: {\r\n            name: '',\r\n            theme: ''\r\n        },\r\n        // errMessage: '',\r\n        isDisabled: false\r\n    }\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    // handleError = () => {\r\n    //     if(this.props.currentBoard.name.length > config.MAX_BOARD_TITLE_LENGTH || this.props.currentBoard.name.length < config.MIN_BOARD_TITLE_LENGTH) {\r\n    //         this.setState({\r\n    //           errMessage: `The length of the title should be between ${config.MIN_BOARD_TITLE_LENGTH} and ${config.MAX_BOARD_TITLE_LENGTH}`,\r\n    //         })} else {\r\n    //         this.setState({\r\n    //           errMessage: '',\r\n    //         })\r\n    //     }\r\n    // }\r\n    handleChange = e => {\r\n        this.props.handleInputChange(e)\r\n        // this.handleError()\r\n    }\r\n    render () {\r\n        const {handleClick, handleSubmit, handleRadioChange, currentBoard, handleDelete} = this.props;\r\n        return (\r\n            <div className=\"addboard__overlay\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <button type=\"button\" className=\"addboard__button\" onClick={handleClick}><FontAwesomeIcon icon={faTimes}/></button>  \r\n                    <div className=\"addboard__inner\">\r\n                        <div className=\"addboard__input-wrapper\">\r\n                            <input type=\"text\" \r\n                            autoFocus\r\n                            className={\"addboard__input\"} \r\n                            value={currentBoard.name} \r\n                            onChange={this.handleChange}/>\r\n                            {/* <p className=\"addboard__message\">{this.state.errMessage}</p> */}\r\n                        </div>\r\n                        <div className=\"addboard__themes\">\r\n                            {config.THEMES.map(theme =>\r\n                                <ThemeRadio key={theme} theme={theme} handleRadioChange={handleRadioChange} currentTheme={currentBoard.theme} />\r\n                            )}\r\n                        </div>\r\n                        <button \r\n                            className={`addboard__submit ${this.state.isDisabled ?'addboard__submit--err' : ''}`} \r\n                            type=\"submit\" \r\n                            disabled={this.state.isDisabled && false}>Add board</button>\r\n                        {handleDelete && <button \r\n                            className=\"addboard__submit addboard__submit--del\" \r\n                            type=\"submit\" \r\n                            disabled={this.state.isDisabled && true}>Remove board</button>}\r\n                    </div>\r\n                </form>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nAddBoardInput.propTypes = {\r\n    errSubmit: PropTypes.bool,\r\n    currentBoard: PropTypes.object.isRequired,\r\n    handleClick: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    handleRadioChange: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func\r\n}\r\n\r\nexport default AddBoardInput;","// export const generateId = () => Math.random().toString(36).substr(2, 16)\r\n\r\nexport const generateId = () => {\r\n  const a = new Date().valueOf();\r\n  const str_a = a.toString();\r\n  const result = Number(str_a.slice(0, 9));\r\n  return result\r\n}\r\n\r\nexport const findById = (id, list) => list.find(item => item.id === id)\r\n\r\nexport const addItem = (list, item) => [...list, item]\r\n\r\nexport const updateList = (list, updated) => {\r\n  const updatedItem = list.findIndex(item => item.id === updated.id)\r\n  return [\r\n    ...list.slice(0, updatedItem),\r\n    updated,\r\n    ...list.slice(updatedItem+1)\r\n  ]\r\n}\r\n\r\nexport const removeItem = (list, id) => {\r\n  const removedIndex = list.findIndex(item => item.id === id)\r\n  return [\r\n    ...list.slice(0, removedIndex),\r\n    ...list.slice(removedIndex+1)\r\n  ]\r\n}\r\n\r\nexport const truncate = (elem, limit, after) => {\r\n  if (!elem || !limit) return\r\n  let content = elem.trim()\r\n  if (content.length > limit) {\r\n    content = content.split('').slice(0, limit)\r\n    content = content.join('') + (after ? after : '')\r\n  }\r\n  return content\r\n}\r\n\r\nexport const reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list)\r\n  const [removed] = result.splice(startIndex, 1)\r\n  result.splice(endIndex, 0, removed)\r\n\r\n  return result\r\n}\r\n\r\nexport const move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source)\r\n  const destClone = Array.from(destination)\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed)\r\n\r\n  const result = {}\r\n  result[droppableSource.droppableId] = sourceClone\r\n  result[droppableDestination.droppableId] = destClone\r\n\r\n  return result\r\n};\r\n\r\n\r\nexport const mapBoards = boards => {\r\n  let mapBoards = boards.map(board => {\r\n    const mapBoardItem = {\r\n      id: board.Id,\r\n      name: board.Name,\r\n      theme: board.Theme,\r\n      lists: board.KanbanLists.map(list => {\r\n        const mapListItem = {\r\n          id: list.Id,\r\n          name: list.Name,\r\n          boardId: board.Id,\r\n          items: list.Cards.map(card => {\r\n            const mapCard = {\r\n              id: card.Id,\r\n              name: card.Name,\r\n              desc: card.Descritpion,\r\n              startDate: card.StartDate,\r\n              endDate: card.EndDate,\r\n            }\r\n            return mapCard\r\n          }),\r\n        }\r\n        return mapListItem\r\n      }),\r\n    }\r\n    return mapBoardItem\r\n  })\r\n  return mapBoards\r\n}\r\n\r\nexport const mapBoard = board => {\r\n  const mapBoardItem = {\r\n    id: board.Id,\r\n    name: board.Name,\r\n    theme: board.Theme,\r\n    lists: board.KanbanLists.map(list => {\r\n      const mapListItem = {\r\n        id: list.Id,\r\n        name: list.Name,\r\n        boardId: board.Id,\r\n        items: list.Cards.map(card => {\r\n          const mapCard = {\r\n            id: card.Id,\r\n            name: card.Name,\r\n            desc: card.Descritpion,\r\n            startDate: card.StartDate,\r\n            endDate: card.EndDate,\r\n          }\r\n          return mapCard\r\n        }),\r\n      }\r\n      return mapListItem\r\n    }),\r\n  }\r\n  return mapBoardItem\r\n}\r\n\r\n// export const mapBoardsToApi = boards => {\r\n//   let mapBoardsToApi = boards.map(board => {\r\n//     const mapBoardItem = {\r\n//       Id: board.id,\r\n//       Name: board.name,\r\n//       Theme: board.theme,\r\n//       KanbanLists: board.lists.map(list => {\r\n//         const mapListItem = {\r\n//           Id: list.id,\r\n//           Name: list.name,\r\n//           boardId: list.boardId,\r\n//           Cards: list.items.map(card => {\r\n//             const mapCard = {\r\n//               Id: card.id,\r\n//               Name: card.name,\r\n//               Descritpion: card.desc,\r\n//               StartDate: card.startDate,\r\n//               EndDate: card.endDate,\r\n//             }\r\n//             return mapCard\r\n//           }),\r\n//         }\r\n//         return mapListItem\r\n//       }),\r\n//     }\r\n//     return mapBoardItem\r\n//   })\r\n//   return mapBoardsToApi\r\n// }\r\n\r\nexport const mapBoardToApi = board => {\r\n  const mapBoardItem = {\r\n    Id: board.id,\r\n    Name: board.name,\r\n    Theme: board.theme,\r\n    KanbanLists: board.lists.map(list => {\r\n      const mapListItem = {\r\n        Id: list.id,\r\n        Name: list.name,\r\n        boardId: board.Id,\r\n        Cards: list.items.map(card => {\r\n          const mapCard = {\r\n            Id: card.id,\r\n            Name: card.name,\r\n            Descritpion: card.desc,\r\n            StartDate: card.startDate,\r\n            EndDate: card.endDate,\r\n          }\r\n          return mapCard\r\n        }),\r\n      }\r\n      return mapListItem\r\n    }),\r\n  }\r\n  return mapBoardItem\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"; \r\nimport { truncate } from '../../utils/helpers'\r\n\r\nconst DashboardItem = ({id, name, lists, theme}) => {\r\n    const cards = lists.reduce((sum, item) => {\r\n        sum += item.items.length\r\n        return sum\r\n    }, 0)\r\n    return (\r\n        <div className=\"board-item\">\r\n            <Link to={`/board/${id}`} className={`board-item__link ${theme.toLowerCase().replace(\" \", \"-\")}`}>\r\n                <p className=\"board-item__title\">{truncate(name, 20, '...')}</p>\r\n                <div className=\"board-stats\">\r\n                    <p className=\"board-stats__item\">\r\n                        <span className=\"board-stats__text board-stats__text--number\">{lists.length}</span>\r\n                        <span className=\"board-stats__text\">Lists</span> \r\n                    </p>\r\n                    <p className=\"board-stats__item\">\r\n                        <span className=\"board-stats__text board-stats__text--number\">{cards}</span>\r\n                        <span className=\"board-stats__text\">Cards</span> \r\n                    </p>\r\n                </div>\r\n            </Link>\r\n        </div> \r\n    )\r\n}\r\n\r\nDashboardItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    lists: PropTypes.array.isRequired,\r\n    theme: PropTypes.string.isRequired\r\n}\r\n\r\nexport default DashboardItem;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst NewDashboardItem = props => {\r\n    return (\r\n        <div className=\"board-item\">\r\n            <button className=\"board-item__link board-item__link--add\" onClick={props.handleClick}>\r\n                <div className=\"board-item__icon\">+</div>\r\n                <p className=\"board-item__title\">Add board</p>\r\n            </button>\r\n        </div> \r\n    )\r\n}\r\n\r\nNewDashboardItem.propTypes = {\r\n    handleClick: PropTypes.func.isRequired\r\n}\r\n  \r\n\r\nexport default NewDashboardItem;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DashboardItem from './DashboardItem'\r\nimport NewBoardItem from './NewDashboardItem'\r\n \r\nconst BoardsList = ({boards, handleClick}) => {\r\n  return (\r\n    <div className=\"boards-list\">\r\n      {boards.map(board => {\r\n        return <DashboardItem key={board.id} {...board}/> \r\n      })}\r\n      <NewBoardItem handleClick={handleClick} />\r\n    </div>\r\n  )\r\n}\r\n\r\nBoardsList.propTypes = {\r\n  boards: PropTypes.array.isRequired,\r\n  handleClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardsList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport AddBoardInput from '../components/inputs/AddBoardInput'\r\nimport BoardsList from '../components/dashboard/BoardsList'\r\nimport { generateId } from '../utils/helpers'\r\n// import { deleteBoards } from '../utils/service'\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    isInputOpen: false,\r\n    errSubmit: false,\r\n    currentBoard: {\r\n        name: '',\r\n        theme: 'New Life'\r\n    }\r\n  }\r\n  handleClick = e => {\r\n    if(e.keyCode === 27 && this.state.isInputOpen) {\r\n      this.setState(prevState => ({\r\n          isInputOpen: !prevState.isInputOpen\r\n      }))\r\n    } else if (e.type === \"click\") {\r\n      this.setState(prevState => ({\r\n          isInputOpen: !prevState.isInputOpen\r\n      }))\r\n    }\r\n  }\r\n  handleInputChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        currentBoard: {\r\n            ...prevState.currentBoard,\r\n            name: val\r\n        }\r\n    }))\r\n  }\r\n  handleRadioChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        currentBoard: {\r\n            ...prevState.currentBoard,\r\n            theme: val\r\n        }\r\n    }))\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const newBoard = {\r\n        id: generateId(),\r\n        name: this.state.currentBoard.name,\r\n        theme: this.state.currentBoard.theme,\r\n        lists: []\r\n    }\r\n    this.setState({\r\n        isInputOpen: false,\r\n        errSubmit: false,\r\n        currentBoard: {\r\n            name: '',\r\n            theme: 'New Life'\r\n        }\r\n    })\r\n    this.props.handleCreate(newBoard)\r\n  }\r\n  handleErrorSubmit = e => {\r\n    e.preventDefault()\r\n    alert('Empty input. Add some text.')\r\n  }\r\n  handleDeleteLocal = e => {\r\n    // deleteBoards()\r\n    window.location.reload()\r\n  }\r\n  render () {\r\n    const { currentBoard, errSubmit, isInputOpen } = this.state\r\n    const { boards } = this.props\r\n    const submit = currentBoard.name === '' \r\n      ? this.handleErrorSubmit\r\n      : this.handleSubmit\r\n    return (\r\n      <div className=\"dashboard\">\r\n          <button className=\"delete-local\" onClick={this.handleDeleteLocal}>Delete localStorage</button>\r\n          <BoardsList \r\n            boards={boards} \r\n            handleClick={this.handleClick} />\r\n          {isInputOpen && <AddBoardInput \r\n            errSubmit={errSubmit}\r\n            currentBoard={currentBoard}  \r\n            handleClick={this.handleClick} \r\n            handleInputChange={this.handleInputChange} \r\n            handleRadioChange={this.handleRadioChange} \r\n            handleSubmit={submit} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  boards: PropTypes.array.isRequired,\r\n  handleCreate: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Dashboard;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ThemeRadio from  '../common/ThemeRadio'\r\nimport { config } from '../../utils/config'\r\n\r\nclass ThemeButton extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    thisRef = React.createRef();\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    }\r\n    handleClick = e => {\r\n        if(this.thisRef.current.contains(e.target)) {\r\n            this.setState(prevState => ({\r\n                isOpen: true\r\n            }))\r\n            return \r\n        }\r\n        this.setState({isOpen: false})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"button__wrapper\" ref={this.thisRef}>\r\n                <button type=\"button\" className=\"button\">Change Theme</button>\r\n                {this.state.isOpen && <div className=\"button__inner button__inner--themes\">\r\n                    {config.THEMES.map(theme =>\r\n                        <ThemeRadio key={theme} theme={theme} handleRadioChange={this.props.handleRadioChange} currentTheme={this.props.currentTheme} />\r\n                    )}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nThemeButton.propTypes = {\r\n    handleRadioChange: PropTypes.func.isRequired,\r\n    currentTheme: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default ThemeButton;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass DeleteButton extends Component {\r\n    state = {\r\n        isAlertOpen: false\r\n    }\r\n    thisRef = React.createRef();\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    }\r\n    handleClick = e => {\r\n        if(this.thisRef.current.contains(e.target)) {\r\n            this.setState(prevState => ({\r\n                isAlertOpen: !prevState.isAlertOpen\r\n            }))\r\n            return \r\n        }\r\n        this.setState({isAlertOpen: false})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"button__wrapper\" ref={this.thisRef}>\r\n                <button type=\"button\" className={`button${this.props.theme === 'card' ? ' button--delete' : ''}`}>Remove {this.props.theme === 'card' ? 'card' : 'board'}</button>\r\n                {this.state.isAlertOpen && <div className={`button__inner${this.props.theme === 'card' ? ' button__inner--card' : ''}`}>\r\n                    <p className=\"button__inner-text\">Are you sure?</p>\r\n                    <button onClick={this.props.handleRemove} type=\"button\"className=\"button button--delete\">Delete</button>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteButton.propTypes = {\r\n    handleRemove: PropTypes.func.isRequired,\r\n    theme: PropTypes.string\r\n}\r\n\r\n\r\nexport default DeleteButton;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\nimport ThemeButton from '../buttons/ThemeButton'\r\nimport DeleteButton from '../buttons/DeleteButton'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass BoardHeader extends React.Component {\r\n    state = {\r\n        currentBoard: {\r\n            name: '',\r\n            theme: ''\r\n        },\r\n        isInputOpen: false,\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentBoard: {\r\n                name: this.props.board.name,\r\n                theme: this.props.board.theme\r\n            }\r\n        })\r\n    }\r\n    handleNameChange = e => {\r\n        const val = e.target.value;\r\n        this.setState(prevState => ({\r\n            currentBoard: {\r\n                ...prevState.currentBoard,\r\n                name: val\r\n            }\r\n        }))\r\n        \r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const upadtedBoard = {\r\n            ...this.state.currentBoard,\r\n        }\r\n        this.props.handleUpdate(upadtedBoard)\r\n    }\r\n    handleRadioChange = e => {\r\n        const val = e.target.value;\r\n        const upadtedBoard = {\r\n            ...this.state.currentBoard,\r\n            theme: val\r\n        }\r\n        this.setState(prevState => ({\r\n            currentBoard: {\r\n                ...prevState.currentBoard,\r\n                theme: val\r\n            }\r\n        }))\r\n        this.props.handleUpdate(upadtedBoard)\r\n    }\r\n    \r\n    render() {\r\n        const {handleDisplayChange, id, handleRemove, display} = this.props \r\n        return (\r\n            <div className=\"board-header__wrapper\">\r\n                <header className=\"board-header\">\r\n                    <Link className=\"back-link\" to={process.env.PUBLIC_URL + '/'}><FontAwesomeIcon icon={faArrowLeft}/></Link>\r\n                    <div className=\"board-header__inner\">\r\n                        <h1 className=\"board-header__title\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <input className=\"board-header__input\"\r\n                                    value={this.state.currentBoard.name}\r\n                                    onChange={this.handleNameChange} \r\n                                    onBlur={this.handleSubmit}\r\n                                    type=\"text\"/>\r\n                            </form>\r\n                        </h1>\r\n                        <ThemeButton currentTheme={this.state.currentBoard.theme} handleRadioChange={this.handleRadioChange} />\r\n                        <DeleteButton handleRemove={() => handleRemove(id)} />\r\n                    </div>\r\n                    <div className=\"board-header__display\">\r\n                        <label className={`display display--kanban${display === \"kanban\" ? ' active' : ''}`}>\r\n                            <input type=\"checkbox\" onChange={handleDisplayChange} checked={display === \"kanban\"} value=\"kanban\"/>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                        </label>\r\n                        <label className={`display display--list${display === \"list\" ? ' active' : ''}`}>\r\n                            <input type=\"checkbox\" disabled onChange={handleDisplayChange} checked={display === \"list\"} value=\"list\"/>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                        </label>\r\n                        <label className={`display display--gantt${display === \"gantt\" ? ' active' : ''}`}>\r\n                            <input type=\"checkbox\" disabled onChange={handleDisplayChange} checked={display === \"gantt\"} value=\"gantt\"/>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                        </label>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nBoardHeader.propTypes = {\r\n    board: PropTypes.object.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    handleRemove: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default BoardHeader;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst SaveButton = ({handleClick, disabled}) => {\r\n    return (\r\n        <button \r\n            onClick={handleClick}\r\n            type=\"submit\"\r\n            className=\"button button--save\">Save</button>\r\n    )\r\n}\r\n\r\nSaveButton.propTypes = {\r\n    handleClick: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\n\r\nexport default SaveButton;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteButton from '../buttons/DeleteButton'\r\nimport SaveButton from '../buttons/SaveButton'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass CardEdit extends Component {\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    render() {\r\n        const {id, editCard, handleRemove, handleChange, handleSubmit, handleClick} = this.props\r\n        return(\r\n            <div className=\"card-edit\">\r\n                <div className=\"card-edit__inner\">\r\n                    <button className=\"card-edit__exit-button\" onClick={handleClick}><FontAwesomeIcon icon={faTimes}/></button>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"card-edit__form\">\r\n                            <input className=\"card-edit__title\" onChange={e => handleChange(e, 'name')} value={editCard.name}/>\r\n                            <textarea placeholder=\"Descritpion...\" className=\"card-edit__desc\" onChange={e => handleChange(e, 'desc')} value={editCard.desc}/>\r\n                            <div className=\"card-edit__date\">\r\n                                Start:\r\n                                <input type=\"date\" onChange={e => handleChange(e, 'startDate')} value={editCard.startDate}/>\r\n                            </div>\r\n                            <div className=\"card-edit__date\">\r\n                                End:\r\n                                <input type=\"date\" onChange={e => handleChange(e, 'endDate')} value={editCard.endDate}/>\r\n                            </div>\r\n                            <div className=\"card-edit__buttons\">\r\n                                <SaveButton handleClick={handleSubmit} />\r\n                                <DeleteButton theme=\"card\" handleRemove={() => handleRemove(id)} />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCardEdit.propTypes = {\r\n    name: PropTypes.string.isRequired, \r\n    desc: PropTypes.string,  \r\n    startDate: PropTypes.string,  \r\n    endDate: PropTypes.string, \r\n    handleClick: PropTypes.func.isRequired, \r\n    handleRemove: PropTypes.func.isRequired, \r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CardEdit;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CardEdit from './CardEdit'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt, faAlignLeft, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Card extends Component {\r\n    state = {\r\n        name: '', \r\n        desc: '', \r\n        startDate: '', \r\n        endDate: '',\r\n        isEditable: false,\r\n        editCard: {\r\n            name: '', \r\n            desc: '', \r\n            startDate: '', \r\n            endDate: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.props,\r\n            editCard: {\r\n                ...this.props\r\n            }\r\n        })\r\n    }  \r\n    handleClick = e => {\r\n        if(e.keyCode === 27 && this.state.isEditable) {\r\n          this.setState(prevState => ({\r\n            isEditable: !prevState.isEditable\r\n          }))\r\n        } else if (e.type === \"click\") {\r\n          this.setState(prevState => ({\r\n            isEditable: !prevState.isEditable\r\n          }))\r\n        }\r\n    }\r\n    handleChange = (e, property) => {\r\n        const val = e.target.value;\r\n        this.setState(prevState => ({\r\n            editCard: {\r\n                ...prevState.editCard,\r\n                [property]: val\r\n            }\r\n        }))\r\n    }\r\n    handleRemove = id => {\r\n        this.props.handleCardRemove(id);\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const updatedCard = {\r\n            ...this.state.editCard\r\n        }\r\n        this.setState({\r\n            ...updatedCard,\r\n            isEditable: false\r\n        })\r\n        this.props.handleCardEdit(updatedCard);\r\n    }\r\n    render() {\r\n        const { name, desc, startDate, endDate, isEditable } = this.state \r\n        return(\r\n            <div>\r\n                <div className=\"card\">\r\n                    <p className=\"card__title\">{name}</p>\r\n                    <div className=\"card__info\">\r\n                        {desc && <FontAwesomeIcon className=\"card__icon card__icon--desc\" icon={faAlignLeft}/>}\r\n                        {(startDate || endDate) && <p className=\"card__dates\">\r\n                            <FontAwesomeIcon className=\"card__icon card__icon--calendar\" icon={faCalendarAlt}/>\r\n                            <span className=\"card__date\">{startDate ? startDate : '??'}</span>\r\n                            <span>-</span>\r\n                            <span className=\"card__date\">{endDate ? endDate : '??'}</span>\r\n                        </p>}\r\n                    </div>\r\n                    <button className=\"card__edit-button\" onClick={this.handleClick}><FontAwesomeIcon className=\"card__icon\" icon={faPencilAlt}/></button>\r\n                </div>\r\n                {isEditable\r\n                    && <CardEdit {...this.state}\r\n                            id={this.props.id}\r\n                            handleClick={this.handleClick}\r\n                            handleRemove={this.handleRemove}\r\n                            handleChange={this.handleChange}\r\n                            handleSubmit={this.handleSubmit}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCard.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    desc: PropTypes.string,\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst NewCard = ({newCard, handleSubmit, handleChange}) => {\r\n    return (\r\n        <div className=\"new-card\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input onChange={handleChange}  className=\"new-card__input\" placeholder=\"+ Add card\" value={newCard.name} type=\"text\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nNewCard.propTypes = {\r\n    newCard: PropTypes.object.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired, \r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NewCard;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ListDeleteButton extends Component {\r\n    state = {\r\n        isAlertOpen: false\r\n    }\r\n    thisRef = React.createRef();\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    }\r\n    handleClick = e => {\r\n        if(this.thisRef.current.contains(e.target)) {\r\n            this.setState(prevState => ({\r\n                isAlertOpen: !prevState.isAlertOpen\r\n            }))\r\n            return \r\n        }\r\n        this.setState({isAlertOpen: false})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"button__wrapper\" ref={this.thisRef}>\r\n                <button type=\"button\" className=\"list__del-button\"><FontAwesomeIcon className=\"list__icon\" icon={faTrashAlt}/></button>\r\n                {this.state.isAlertOpen && <div className={`button__inner${this.props.theme === 'card' || 'list' ? ' button__inner--card' : ''}`}>\r\n                    <p className=\"button__inner-text\">Are you sure?</p>\r\n                    <button onClick={this.props.handleRemove} type=\"button\"className=\"button button--delete\">Delete</button>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nListDeleteButton.propTypes = {\r\n    handleRemove: PropTypes.func.isRequired,\r\n    theme: PropTypes.string\r\n}\r\n\r\n\r\nexport default ListDeleteButton;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from './Card'\r\nimport NewCard from './NewCard'\r\nimport ListDeleteButton from '../buttons/ListDeleteButton'\r\nimport { generateId, addItem, updateList, removeItem } from '../../utils/helpers'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nclass List extends Component {\r\n  state = {\r\n    list: {\r\n      name: '',\r\n      boardId: '',\r\n      items: []\r\n    },\r\n    newCard: {\r\n      name: '',\r\n      desc: '',\r\n      startDate: '',\r\n      endDate: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      list: {\r\n        name: this.props.name,\r\n        boardId: this.props.board.id,\r\n        items: this.props.items\r\n      }\r\n    })\r\n  }  \r\n  handleChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        list: {\r\n            ...prevState.list,\r\n            name: val\r\n        }\r\n    }))\r\n  }\r\n  handleCardChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        newCard: {\r\n            ...prevState.newCard,\r\n            name: val\r\n        }\r\n    }))\r\n  }\r\n  handleCardRemove = id => {\r\n    const updatedCards = removeItem(this.props.items, id)\r\n    const updatedList = {\r\n        ...this.state.list,\r\n        id: this.props.id,\r\n        items: updatedCards\r\n    }\r\n    this.setState(prevState => ({\r\n      list: {\r\n          ...prevState.list,\r\n          items: updatedCards\r\n      }\r\n  }))\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  handleCardEdit = card => {\r\n    const updatedCards = updateList(this.props.items, card);\r\n    const updatedList = {\r\n      ...this.state.list,\r\n      id: this.props.id,\r\n      items: updatedCards\r\n    }\r\n    this.setState(prevState => ({\r\n        list: {\r\n            ...prevState.list,\r\n            items: updatedCards\r\n        }\r\n    }))\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const updatedList = {\r\n      ...this.state.list,\r\n      id: this.props.id,\r\n      name: this.state.list.name\r\n    }\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  handleCardSubmit = e => {\r\n    e.preventDefault()\r\n    const newCard = {\r\n      ...this.state.newCard,\r\n      id: generateId(),\r\n      name: this.state.newCard.name,\r\n    }\r\n    const updatedItems = addItem(this.state.list.items, newCard)\r\n    const updatedList = {\r\n      ...this.state.list,\r\n      id: this.props.id,\r\n      items: updatedItems\r\n    }\r\n    this.setState(prevState => ({\r\n      list: {\r\n        ...prevState.list,\r\n        items: updatedItems\r\n      },\r\n      newCard: {\r\n          ...prevState.newCard,\r\n          name: ''\r\n      }\r\n    }))\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  render() {\r\n    return (\r\n      <Droppable droppableId={this.props.id} type=\"card\">\r\n        {(provided, snapshot) => (\r\n          <div className={`list${snapshot.isDraggingOver ? ' list--drag-over' : ''}`}>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"list__header\">\r\n                  <input onChange={this.handleChange} onBlur={this.handleSubmit} className=\"list__title\" value={this.state.list.name}/>\r\n                  <FontAwesomeIcon className=\"list__icon list__icon--hand\" icon={faHandPaper}/>\r\n                  <ListDeleteButton theme=\"list\" handleRemove={() => this.props.handleRemove(this.props.id)} />\r\n              </div>\r\n            </form>\r\n            {/* <Scrollbars> */}\r\n            <div className=\"list__cards-wrapper\" ref={provided.innerRef}>\r\n            \r\n            {this.props.items.map((card, index) => ( \r\n              <Draggable\r\n                  type=\"card\"\r\n                  key={card.id}\r\n                  draggableId={card.id}\r\n                  index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        className={snapshot.isDragging ? 'card__wrapper card__wrapper-active' : 'card__wrapper'}\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={provided.draggableProps.style}>\r\n                        <Card key={card.id} {...card} handleCardRemove={this.handleCardRemove} handleCardEdit={this.handleCardEdit}/>\r\n                      </div>\r\n                    )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n            <NewCard \r\n              newCard={this.state.newCard} \r\n              handleChange={this.handleCardChange}\r\n              handleSubmit={this.handleCardSubmit}/>\r\n              \r\n            </div>\r\n            {/* </Scrollbars> */}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    )\r\n  }\r\n}\r\nList.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    items: PropTypes.array.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n    handleListChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default List;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst NewList = ({newListName, handleSubmit, handleChange}) => {\r\n    return (\r\n        <div className=\"list new-list\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input onChange={handleChange} placeholder=\"+ Add board\" className=\"new-list__input\" value={newListName} type=\"text\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nNewList.propTypes = {\r\n    newListName: PropTypes.string.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NewList;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from  './List'\r\nimport NewList from './NewList'\r\nimport { generateId, addItem, updateList, removeItem, findById, reorder, move } from '../../utils/helpers'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nclass BoardLists extends Component {\r\n  state = {\r\n    newListName: ''\r\n  }\r\n  handleChange = e => {\r\n    this.setState({newListName: e.target.value})\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const newList = {\r\n      \"boardId\": this.props.board.id,\r\n      \"name\": this.state.newListName,\r\n      \"items\": []\r\n    }\r\n    this.setState({newListName: ''})\r\n    const updatedLists = addItem(this.props.lists, newList);\r\n    this.props.handleListsUpdate(updatedLists);\r\n  }\r\n  handleRemove = id => {\r\n    const updatedLists = removeItem(this.props.lists, id);\r\n    this.props.handleListsUpdate(updatedLists);\r\n  }\r\n  handleListChange = list => {\r\n    const updatedLists = updateList(this.props.lists, list);\r\n    this.props.handleListsUpdate(updatedLists);\r\n  }\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n    \r\n    if (!destination) {\r\n        return;\r\n    }\r\n\r\n    if (source.droppableId === this.props.id) {\r\n      const items = reorder(\r\n        this.props.lists,\r\n        source.index,\r\n        destination.index\r\n      )\r\n      this.props.handleListsUpdate(items)\r\n    } else if (source.droppableId === destination.droppableId) {\r\n        const list = findById(source.droppableId, this.props.lists)\r\n        const items = reorder(\r\n            list.items,\r\n            source.index,\r\n            destination.index\r\n        );\r\n        const newList = {\r\n          ...list,\r\n          items: items\r\n        }\r\n        this.handleListChange(newList)\r\n    } else {\r\n        const sourceList = findById(source.droppableId, this.props.lists)\r\n        const destList = findById(destination.droppableId, this.props.lists)\r\n        const result = move(\r\n            sourceList.items,\r\n            destList.items,\r\n            source,\r\n            destination\r\n        );\r\n        const newSourceList = {\r\n          ...sourceList,\r\n          items: result[source.droppableId]\r\n        }\r\n        const newDestList = {\r\n          ...destList,\r\n          items: result[destination.droppableId]\r\n        }\r\n        this.handleListChange(newSourceList)\r\n        this.handleListChange(newDestList)\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <div className=\"board-lists__wrapper\">\r\n              <Droppable droppableId={this.props.id} direction=\"horizontal\" type=\"list\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  className=\"board-lists\"\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {this.props.lists.map((list, index) => (\r\n                    <Draggable key={list.id} draggableId={list.id} index={index} type=\"list\">\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}>\r\n                          <List board={this.props.board} handleListChange={this.handleListChange} handleRemove={this.handleRemove} key={list.id} {...list}/>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <NewList\r\n                    newListName={this.state.newListName}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit} />\r\n                </div>\r\n              )}\r\n              </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n    )\r\n  }\r\n} \r\n\r\nBoardLists.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    lists: PropTypes.array.isRequired,\r\n    handleListsUpdate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardLists;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport BoardHeader from '../components/board/BoardHeader'\r\nimport BoardLists from '../components/board/BoardLists'\r\nimport { generateId, addItem } from '../utils/helpers'\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        board: {\r\n            name: '',\r\n            theme: '',\r\n            lists: []\r\n        },\r\n        display: \"kanban\",\r\n        newList: ''\r\n    }\r\n    componentDidMount() {\r\n        this.setState({board: this.props.board})\r\n    }\r\n    handleUpdate = update => {\r\n        const upadtedBoard = {\r\n            ...this.state.board,\r\n            id: this.props.id,\r\n            name: update.name,\r\n            theme: update.theme\r\n        }\r\n        this.setState(prevState => ({\r\n            board: {\r\n                ...prevState.board,\r\n                name: update.name,\r\n                theme: update.theme\r\n            }\r\n        }))\r\n        this.props.updatedBoard(upadtedBoard)\r\n    }\r\n    handleDisplayChange = e => {\r\n        this.setState({display: e.target.value})\r\n    }\r\n    handleAddListChange = e => {\r\n        this.setState({newList: e.target.value})\r\n    }\r\n    handleAddListSubmit = e => {\r\n        e.preventDefault()\r\n        const newList = {\r\n            id: generateId(),\r\n            name: this.state.newList,\r\n            items: []\r\n        }\r\n        const addList = addItem(this.state.board.lists, newList)\r\n        const upadtedBoard = {\r\n            ...this.state.board,\r\n            lists: addList\r\n        }\r\n        this.setState(prevState => ({\r\n            board: {\r\n                ...prevState.board,\r\n                lists: addList\r\n            },\r\n            display: \"default\",\r\n            newList: ''\r\n        }))\r\n        this.props.updatedBoard(upadtedBoard)\r\n    }\r\n    handleListsUpdate = lists => {\r\n        const upadtedBoard = {\r\n            ...this.state.board,\r\n            lists: lists\r\n        }\r\n        this.setState(prevState => ({\r\n            board: {\r\n                ...prevState.board,\r\n                lists: lists\r\n            }\r\n        })) \r\n        this.props.updatedBoard(upadtedBoard)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`board ${this.state.board.theme.toLowerCase().split(' ').join('-')}`}>\r\n                <BoardHeader id={this.props.id} \r\n                    name={this.state.board.name} \r\n                    handleRemove={this.props.handleRemove} \r\n                    handleDisplayChange={this.handleDisplayChange}\r\n                    board={this.props.board} \r\n                    display={this.state.display}\r\n                    handleUpdate={this.handleUpdate} />\r\n                <BoardLists \r\n                    id={this.props.id}\r\n                    board={this.props.board}\r\n                    lists={this.state.board.lists} \r\n                    handleListsUpdate={this.handleListsUpdate} />\r\n                <div className=\"theme-background\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n  board: PropTypes.object.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n  updatedBoard: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Board; \r\n","import { mapBoards, mapBoard, mapBoardToApi } from './helpers'\r\n\r\nconst baseUrl = \"http://localhost:56935/api/boards\"\r\n \r\nexport const loadBoards = () => {\r\n    return fetch(baseUrl) \r\n        .then(res => res.json())\r\n        .then(res => mapBoards(res))\r\n}\r\n\r\n// export const saveBoards = boards => {\r\n//     localStorage.setItem('boards', JSON.stringify(boards))\r\n// }\r\n\r\n// export const deleteBoards = () => {\r\n//   localStorage.clear()\r\n// }\r\n\r\n\r\nexport const createBoard = item => {\r\n    const board = mapBoardToApi(item)\r\n    return fetch(baseUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(board)\r\n    }).then(res => res.json())\r\n    // .then(res => mapBoard(res))\r\n  }\r\n\r\nexport const saveBoard = item => {\r\nconst board = mapBoardToApi(item)\r\n  return fetch(`${baseUrl}/${item.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(board)\r\n  }).then(res => res.json())\r\n//   .then(res => mapBoard(res))\r\n}\r\n\r\nexport const destroyBoard = id => {\r\n  return fetch(`${baseUrl}/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n}","import React, { Component } from 'react';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Board from './pages/Board'\r\nimport { findById, addItem, updateList, removeItem } from './utils/helpers'\r\nimport { loadBoards, createBoard, saveBoard, destroyBoard } from './utils/service'\r\n\r\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\"; \r\nimport './styles/styles.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    boards: []\r\n  }\r\n  componentDidMount() {\r\n    loadBoards()\r\n      .then(boards => this.setState({boards}))\r\n  }\r\n  // handleCreate = newBoard => {\r\n  //   const updatedBoards = addItem(this.state.boards, newBoard)\r\n  //   this.setState({boards: updatedBoards})\r\n  //   saveBoards(updatedBoards)\r\n  // }\r\n  // handleRemove = id => {\r\n  //   const updatedBoards = removeItem(this.state.boards, id)\r\n  //   this.setState({boards: updatedBoards})\r\n  //   saveBoards(updatedBoards)\r\n  // }\r\n  // updatedBoard = board => {\r\n  //   const upadtedBoard = updateList(this.state.boards, board)\r\n  //   this.setState({boards: upadtedBoard})\r\n  //   saveBoards(upadtedBoard)\r\n  // }\r\n\r\n  handleCreate = newBoard => {\r\n    const updatedBoards = addItem(this.state.boards, newBoard)\r\n    this.setState({boards: updatedBoards})\r\n    createBoard(newBoard)\r\n      .then(() => console.log(`Board ${newBoard.name} added`))\r\n  }\r\n  handleRemove = id => {\r\n    const updatedBoards = removeItem(this.state.boards, id)\r\n    this.setState({boards: updatedBoards})\r\n    destroyBoard(id)\r\n      .then(() => console.log(`Board with ID ${id} removed`))\r\n  }\r\n  updatedBoard = board => {\r\n    const upadtedBoard = updateList(this.state.boards, board)\r\n    this.setState({boards: upadtedBoard})\r\n    saveBoard(board)\r\n      .then(() => console.log(`Board ${board.name} updated`))\r\n  }\r\n\r\n  render() {  \r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path='/' render={props => (<Dashboard \r\n                    handleCreate={this.handleCreate} \r\n                    boards={this.state.boards} \r\n                    {...props}/>)\r\n                }/>\r\n                <Route path=\"/board/:id\" \r\n                render={props => {\r\n                    console.log(props.match.params.id)\r\n                    const ifCorrectID = findById(parseInt(props.match.params.id), this.state.boards)\r\n                    console.log(this.state.boards)\r\n                    console.log(ifCorrectID)\r\n                    return (ifCorrectID \r\n                      ? <Board id={parseInt(props.match.params.id)} \r\n                          board={ifCorrectID} \r\n                          handleRemove={this.handleRemove} \r\n                          updatedBoard={this.updatedBoard} /> \r\n                      : <Redirect to='/' />)\r\n                  }\r\n                }/>\r\n                <Redirect to='/'/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  } \r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}
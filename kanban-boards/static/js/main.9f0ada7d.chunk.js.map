{"version":3,"sources":["components/common/ThemeRadio.js","utils/config.js","components/inputs/AddBoardInput.js","utils/helpers.js","components/dashboard/DashboardItem.js","components/dashboard/NewDashboardItem.js","components/dashboard/BoardsList.js","utils/service.js","pages/Dashboard.js","components/buttons/ThemeButton.js","components/buttons/DeleteButton.js","components/board/BoardHeader.js","components/buttons/SaveButton.js","components/board/CardEdit.js","components/board/Card.js","components/board/NewCard.js","components/buttons/ListDeleteButton.js","components/board/List.js","components/board/NewList.js","components/board/BoardLists.js","pages/Board.js","App.js","registerServiceWorker.js","index.js"],"names":["ThemeRadio","_ref","theme","handleRadioChange","currentTheme","react_default","a","createElement","title","className","concat","toLowerCase","replace","onChange","checked","type","name","value","index_es","icon","faCheck","config","THEMES","AddBoardInput","state","currentBoard","isDisabled","handleChange","e","_this","props","handleInputChange","document","addEventListener","this","handleClick","removeEventListener","_this$props","handleSubmit","handleDelete","onSubmit","onClick","faTimes","autoFocus","map","common_ThemeRadio","key","disabled","React","Component","generateId","Math","random","toString","substr","findById","id","list","find","item","addItem","Object","toConsumableArray","updateList","updated","updatedItem","findIndex","slice","removeItem","removedIndex","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","droppableId","DashboardItem","lists","cards","reduce","sum","items","length","Link","to","elem","limit","after","content","trim","split","join","truncate","NewDashboardItem","BoardsList","boards","board","dashboard_DashboardItem","assign","dashboard_NewDashboardItem","saveBoards","localStorage","setItem","JSON","stringify","deleteBoards","clear","Dashboard","isInputOpen","errSubmit","keyCode","setState","prevState","val","target","objectSpread","preventDefault","newBoard","handleCreate","handleErrorSubmit","alert","handleDeleteLocal","window","location","reload","_this$state","submit","dashboard_BoardsList","inputs_AddBoardInput","ThemeButton","isOpen","thisRef","createRef","current","contains","_this2","ref","DeleteButton","isAlertOpen","handleRemove","BoardHeader","handleNameChange","upadtedBoard","handleUpdate","handleDisplayChange","display","faArrowLeft","onBlur","buttons_ThemeButton","buttons_DeleteButton","SaveButton","CardEdit","editCard","placeholder","desc","startDate","endDate","buttons_SaveButton","Card","isEditable","property","defineProperty","handleCardRemove","updatedCard","handleCardEdit","faAlignLeft","faCalendarAlt","faPencilAlt","board_CardEdit","NewCard","newCard","ListDeleteButton","faTrashAlt","List","handleCardChange","updatedCards","updatedList","handleListChange","card","handleCardSubmit","updatedItems","react_beautiful_dnd_esm","provided","snapshot","isDraggingOver","faHandPaper","buttons_ListDeleteButton","innerRef","draggableId","isDragging","draggableProps","dragHandleProps","style","board_Card","board_NewCard","NewList","newListName","BoardLists","newList","updatedLists","handleListsUpdate","onDragEnd","sourceList","destList","newSourceList","newDestList","direction","droppableProps","board_List","board_NewList","Board","update","updatedBoard","handleAddListChange","handleAddListSubmit","addList","board_BoardHeader","board_BoardLists","App","updatedBoards","getItem","parse","loadBoards","BrowserRouter","basename","process","Switch","Route","exact","path","render","pages_Dashboard","ifCorrectID","match","params","pages_Board","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9f0ada7d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\n\nconst ThemeRadio = ({theme, handleRadioChange, currentTheme}) => {\n    return (\n        <label title={theme} className={`theme-radio ${theme.toLowerCase().replace(\" \", \"-\")}`}>\n            <input className=\"theme-radio__input\" onChange={handleRadioChange} checked={currentTheme === theme} type=\"radio\" name=\"theme\" value={theme}/>\n            <FontAwesomeIcon className=\"theme-radio__icon\" icon={faCheck}/>\n        </label>\n    )\n}\n\nThemeRadio.propTypes = {\n    theme: PropTypes.string.isRequired,\n    currentTheme: PropTypes.string.isRequired,\n    handleRadioChange: PropTypes.func.isRequired\n}\n  \n\nexport default ThemeRadio;","export const config = {\n    THEMES: [\"Malibu Beach\", \"New Life\", \"Night Fade\", \"Sunny Morning\", \"Love Kiss\"]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ThemeRadio from  '../common/ThemeRadio'\nimport { config } from '../../utils/config'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nclass AddBoardInput extends React.Component {\n    state = {\n        currentBoard: {\n            name: '',\n            theme: ''\n        },\n        // errMessage: '',\n        isDisabled: false\n    }\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this.props.handleClick);\n    }\n    componentWillUnmount(){\n        document.removeEventListener(\"keydown\", this.props.handleClick);\n    }\n    // handleError = () => {\n    //     if(this.props.currentBoard.name.length > config.MAX_BOARD_TITLE_LENGTH || this.props.currentBoard.name.length < config.MIN_BOARD_TITLE_LENGTH) {\n    //         this.setState({\n    //           errMessage: `The length of the title should be between ${config.MIN_BOARD_TITLE_LENGTH} and ${config.MAX_BOARD_TITLE_LENGTH}`,\n    //         })} else {\n    //         this.setState({\n    //           errMessage: '',\n    //         })\n    //     }\n    // }\n    handleChange = e => {\n        this.props.handleInputChange(e)\n        // this.handleError()\n    }\n    render () {\n        const {handleClick, handleSubmit, handleRadioChange, currentBoard, handleDelete} = this.props;\n        return (\n            <div className=\"addboard__overlay\">\n                <form onSubmit={handleSubmit}>\n                    <button type=\"button\" className=\"addboard__button\" onClick={handleClick}><FontAwesomeIcon icon={faTimes}/></button>  \n                    <div className=\"addboard__inner\">\n                        <div className=\"addboard__input-wrapper\">\n                            <input type=\"text\" \n                            autoFocus\n                            className={\"addboard__input\"} \n                            value={currentBoard.name} \n                            onChange={this.handleChange}/>\n                            {/* <p className=\"addboard__message\">{this.state.errMessage}</p> */}\n                        </div>\n                        <div className=\"addboard__themes\">\n                            {config.THEMES.map(theme =>\n                                <ThemeRadio key={theme} theme={theme} handleRadioChange={handleRadioChange} currentTheme={currentBoard.theme} />\n                            )}\n                        </div>\n                        <button \n                            className={`addboard__submit ${this.state.isDisabled ?'addboard__submit--err' : ''}`} \n                            type=\"submit\" \n                            disabled={this.state.isDisabled && false}>Add board</button>\n                        {handleDelete && <button \n                            className=\"addboard__submit addboard__submit--del\" \n                            type=\"submit\" \n                            disabled={this.state.isDisabled && true}>Remove board</button>}\n                    </div>\n                </form>\n            </div> \n        )\n    }\n}\n\nAddBoardInput.propTypes = {\n    errSubmit: PropTypes.bool,\n    currentBoard: PropTypes.object.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    handleInputChange: PropTypes.func.isRequired,\n    handleRadioChange: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func\n}\n\nexport default AddBoardInput;","export const generateId = () => Math.random().toString(36).substr(2, 16)\n\nexport const findById = (id, list) => list.find(item => item.id === id)\n\nexport const addItem = (list, item) => [...list, item]\n\nexport const updateList = (list, updated) => {\n  const updatedItem = list.findIndex(item => item.id === updated.id)\n  return [\n    ...list.slice(0, updatedItem),\n    updated,\n    ...list.slice(updatedItem+1)\n  ]\n}\n\nexport const removeItem = (list, id) => {\n  const removedIndex = list.findIndex(item => item.id === id)\n  return [\n    ...list.slice(0, removedIndex),\n    ...list.slice(removedIndex+1)\n  ]\n}\n\nexport const truncate = (elem, limit, after) => {\n  if (!elem || !limit) return\n  let content = elem.trim()\n  if (content.length > limit) {\n    content = content.split('').slice(0, limit)\n    content = content.join('') + (after ? after : '')\n  }\n  return content\n}\n\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nexport const move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n  destClone.splice(droppableDestination.index, 0, removed)\n\n  const result = {}\n  result[droppableSource.droppableId] = sourceClone\n  result[droppableDestination.droppableId] = destClone\n\n  return result\n};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"; \nimport { truncate } from '../../utils/helpers'\n\nconst DashboardItem = ({id, name, lists, theme}) => {\n    const cards = lists.reduce((sum, item) => {\n        sum += item.items.length\n        return sum\n    }, 0)\n    return (\n        <div className=\"board-item\">\n            <Link to={`/board/${id}`} className={`board-item__link ${theme.toLowerCase().replace(\" \", \"-\")}`}>\n                <p className=\"board-item__title\">{truncate(name, 20, '...')}</p>\n                <div className=\"board-stats\">\n                    <p className=\"board-stats__item\">\n                        <span className=\"board-stats__text board-stats__text--number\">{lists.length}</span>\n                        <span className=\"board-stats__text\">Lists</span> \n                    </p>\n                    <p className=\"board-stats__item\">\n                        <span className=\"board-stats__text board-stats__text--number\">{cards}</span>\n                        <span className=\"board-stats__text\">Cards</span> \n                    </p>\n                </div>\n            </Link>\n        </div> \n    )\n}\n\nDashboardItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    theme: PropTypes.string.isRequired\n}\n\nexport default DashboardItem;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst NewDashboardItem = props => {\n    return (\n        <div className=\"board-item\">\n            <button className=\"board-item__link board-item__link--add\" onClick={props.handleClick}>\n                <div className=\"board-item__icon\">+</div>\n                <p className=\"board-item__title\">Add board</p>\n            </button>\n        </div> \n    )\n}\n\nNewDashboardItem.propTypes = {\n    handleClick: PropTypes.func.isRequired\n}\n  \n\nexport default NewDashboardItem;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DashboardItem from './DashboardItem'\nimport NewBoardItem from './NewDashboardItem'\n \nconst BoardsList = ({boards, handleClick}) => {\n  return (\n    <div className=\"boards-list\">\n      {boards.map(board => {\n        return <DashboardItem key={board.id} {...board}/> \n      })}\n      <NewBoardItem handleClick={handleClick} />\n    </div>\n  )\n}\n\nBoardsList.propTypes = {\n  boards: PropTypes.array.isRequired,\n  handleClick: PropTypes.func.isRequired\n}\n\nexport default BoardsList;","export const loadBoards = () => {\n  if (localStorage.getItem('boards')) {\n    const boards = localStorage.getItem('boards')\n    return JSON.parse(boards)\n  } else {\n    const boards = []\n    localStorage.setItem('boards', JSON.stringify(boards))\n    return boards\n  }\n}\n\nexport const saveBoards = boards => {\n    localStorage.setItem('boards', JSON.stringify(boards))\n}\n\nexport const deleteBoards = () => {\n  localStorage.clear()\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport AddBoardInput from '../components/inputs/AddBoardInput'\nimport BoardsList from '../components/dashboard/BoardsList'\nimport { generateId } from '../utils/helpers'\nimport { deleteBoards } from '../utils/service'\n\nclass Dashboard extends Component {\n  state = {\n    isInputOpen: false,\n    errSubmit: false,\n    currentBoard: {\n        name: '',\n        theme: 'New Life'\n    }\n  }\n  handleClick = e => {\n    if(e.keyCode === 27 && this.state.isInputOpen) {\n      this.setState(prevState => ({\n          isInputOpen: !prevState.isInputOpen\n      }))\n    } else if (e.type === \"click\") {\n      this.setState(prevState => ({\n          isInputOpen: !prevState.isInputOpen\n      }))\n    }\n  }\n  handleInputChange = e => {\n    const val = e.target.value;\n    this.setState(prevState => ({\n        currentBoard: {\n            ...prevState.currentBoard,\n            name: val\n        }\n    }))\n  }\n  handleRadioChange = e => {\n    const val = e.target.value;\n    this.setState(prevState => ({\n        currentBoard: {\n            ...prevState.currentBoard,\n            theme: val\n        }\n    }))\n  }\n  handleSubmit = e => {\n    e.preventDefault()\n    const newBoard = {\n        id: generateId(),\n        name: this.state.currentBoard.name,\n        theme: this.state.currentBoard.theme,\n        lists: []\n    }\n    this.setState({\n        isInputOpen: false,\n        errSubmit: false,\n        currentBoard: {\n            name: '',\n            theme: 'New Life'\n        }\n    })\n    this.props.handleCreate(newBoard)\n  }\n  handleErrorSubmit = e => {\n    e.preventDefault()\n    alert('Empty input. Add some text.')\n  }\n  handleDeleteLocal = e => {\n    deleteBoards()\n    window.location.reload()\n  }\n  render () {\n    const { currentBoard, errSubmit, isInputOpen } = this.state\n    const { boards } = this.props\n    const submit = currentBoard.name === '' \n      ? this.handleErrorSubmit\n      : this.handleSubmit\n    return (\n      <div className=\"dashboard\">\n          <button className=\"delete-local\" onClick={this.handleDeleteLocal}>Delete localStorage</button>\n          <BoardsList \n            boards={boards} \n            handleClick={this.handleClick} />\n          {isInputOpen && <AddBoardInput \n            errSubmit={errSubmit}\n            currentBoard={currentBoard}  \n            handleClick={this.handleClick} \n            handleInputChange={this.handleInputChange} \n            handleRadioChange={this.handleRadioChange} \n            handleSubmit={submit} />}\n      </div>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  boards: PropTypes.array.isRequired,\n  handleCreate: PropTypes.func.isRequired\n}\n \nexport default Dashboard;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport ThemeRadio from  '../common/ThemeRadio'\nimport { config } from '../../utils/config'\n\nclass ThemeButton extends Component {\n    state = {\n        isOpen: false\n    }\n    thisRef = React.createRef();\n    componentDidMount() {\n        document.addEventListener('click', this.handleClick);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClick);\n    }\n    handleClick = e => {\n        if(this.thisRef.current.contains(e.target)) {\n            this.setState(prevState => ({\n                isOpen: true\n            }))\n            return \n        }\n        this.setState({isOpen: false})\n    }\n    render() {\n        return (\n            <div className=\"button__wrapper\" ref={this.thisRef}>\n                <button type=\"button\" className=\"button\">Change Theme</button>\n                {this.state.isOpen && <div className=\"button__inner button__inner--themes\">\n                    {config.THEMES.map(theme =>\n                        <ThemeRadio key={theme} theme={theme} handleRadioChange={this.props.handleRadioChange} currentTheme={this.props.currentTheme} />\n                    )}\n                </div>}\n            </div>\n        )\n    }\n}\n\nThemeButton.propTypes = {\n    handleRadioChange: PropTypes.func.isRequired,\n    currentTheme: PropTypes.string.isRequired\n}\n\n\nexport default ThemeButton;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass DeleteButton extends Component {\n    state = {\n        isAlertOpen: false\n    }\n    thisRef = React.createRef();\n    componentDidMount() {\n        document.addEventListener('click', this.handleClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClick);\n    }\n    handleClick = e => {\n        if(this.thisRef.current.contains(e.target)) {\n            this.setState(prevState => ({\n                isAlertOpen: !prevState.isAlertOpen\n            }))\n            return \n        }\n        this.setState({isAlertOpen: false})\n    }\n    render() {\n        return (\n            <div className=\"button__wrapper\" ref={this.thisRef}>\n                <button type=\"button\" className={`button${this.props.theme === 'card' ? ' button--delete' : ''}`}>Remove {this.props.theme === 'card' ? 'card' : 'board'}</button>\n                {this.state.isAlertOpen && <div className={`button__inner${this.props.theme === 'card' ? ' button__inner--card' : ''}`}>\n                    <p className=\"button__inner-text\">Are you sure?</p>\n                    <button onClick={this.props.handleRemove} type=\"button\"className=\"button button--delete\">Delete</button>\n                </div>}\n            </div>\n        )\n    }\n}\n\nDeleteButton.propTypes = {\n    handleRemove: PropTypes.func.isRequired,\n    theme: PropTypes.string\n}\n\n\nexport default DeleteButton;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\nimport ThemeButton from '../buttons/ThemeButton'\nimport DeleteButton from '../buttons/DeleteButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nclass BoardHeader extends React.Component {\n    state = {\n        currentBoard: {\n            name: '',\n            theme: ''\n        },\n        isInputOpen: false,\n    }\n    componentDidMount() {\n        this.setState({\n            currentBoard: {\n                name: this.props.board.name,\n                theme: this.props.board.theme\n            }\n        })\n    }\n    handleNameChange = e => {\n        const val = e.target.value;\n        this.setState(prevState => ({\n            currentBoard: {\n                ...prevState.currentBoard,\n                name: val\n            }\n        }))\n        \n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        const upadtedBoard = {\n            ...this.state.currentBoard,\n        }\n        this.props.handleUpdate(upadtedBoard)\n    }\n    handleRadioChange = e => {\n        const val = e.target.value;\n        const upadtedBoard = {\n            ...this.state.currentBoard,\n            theme: val\n        }\n        this.setState(prevState => ({\n            currentBoard: {\n                ...prevState.currentBoard,\n                theme: val\n            }\n        }))\n        this.props.handleUpdate(upadtedBoard)\n    }\n    \n    render() {\n        const {handleDisplayChange, id, handleRemove, display} = this.props \n        return (\n            <div className=\"board-header__wrapper\">\n                <header className=\"board-header\">\n                    <Link className=\"back-link\" to={process.env.PUBLIC_URL + '/'}><FontAwesomeIcon icon={faArrowLeft}/></Link>\n                    <div className=\"board-header__inner\">\n                        <h1 className=\"board-header__title\">\n                            <form onSubmit={this.handleSubmit}>\n                                <input className=\"board-header__input\"\n                                    value={this.state.currentBoard.name}\n                                    onChange={this.handleNameChange} \n                                    onBlur={this.handleSubmit}\n                                    type=\"text\"/>\n                            </form>\n                        </h1>\n                        <ThemeButton currentTheme={this.state.currentBoard.theme} handleRadioChange={this.handleRadioChange} />\n                        <DeleteButton handleRemove={() => handleRemove(id)} />\n                    </div>\n                    <div className=\"board-header__display\">\n                        <label className={`display display--kanban${display === \"kanban\" ? ' active' : ''}`}>\n                            <input type=\"checkbox\" onChange={handleDisplayChange} checked={display === \"kanban\"} value=\"kanban\"/>\n                            <span className=\"display__line\"></span>\n                            <span className=\"display__line\"></span>\n                            <span className=\"display__line\"></span>\n                        </label>\n                        <label className={`display display--list${display === \"list\" ? ' active' : ''}`}>\n                            <input type=\"checkbox\" disabled onChange={handleDisplayChange} checked={display === \"list\"} value=\"list\"/>\n                            <span className=\"display__line\"></span>\n                            <span className=\"display__line\"></span>\n                            <span className=\"display__line\"></span>\n                        </label>\n                        <label className={`display display--gantt${display === \"gantt\" ? ' active' : ''}`}>\n                            <input type=\"checkbox\" disabled onChange={handleDisplayChange} checked={display === \"gantt\"} value=\"gantt\"/>\n                            <span className=\"display__line\"></span>\n                            <span className=\"display__line\"></span>\n                            <span className=\"display__line\"></span>\n                        </label>\n                    </div>\n                </header>\n            </div>\n        ); \n    }\n}\n\nBoardHeader.propTypes = {\n    board: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    handleRemove: PropTypes.func.isRequired\n}\n\n\nexport default BoardHeader;","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst SaveButton = ({handleClick, disabled}) => {\n    return (\n        <button \n            onClick={handleClick}\n            type=\"submit\"\n            className=\"button button--save\">Save</button>\n    )\n}\n\nSaveButton.propTypes = {\n    handleClick: PropTypes.func.isRequired,\n\n}\n\n\nexport default SaveButton;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport DeleteButton from '../buttons/DeleteButton'\nimport SaveButton from '../buttons/SaveButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nclass CardEdit extends Component {\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this.props.handleClick);\n    }\n    componentWillUnmount(){\n        document.removeEventListener(\"keydown\", this.props.handleClick);\n    }\n    render() {\n        const {id, editCard, handleRemove, handleChange, handleSubmit, handleClick} = this.props\n        return(\n            <div className=\"card-edit\">\n                <div className=\"card-edit__inner\">\n                    <button className=\"card-edit__exit-button\" onClick={handleClick}><FontAwesomeIcon icon={faTimes}/></button>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"card-edit__form\">\n                            <input className=\"card-edit__title\" onChange={e => handleChange(e, 'name')} value={editCard.name}/>\n                            <textarea placeholder=\"Descritpion...\" className=\"card-edit__desc\" onChange={e => handleChange(e, 'desc')} value={editCard.desc}/>\n                            <div className=\"card-edit__date\">\n                                Start:\n                                <input type=\"date\" onChange={e => handleChange(e, 'startDate')} value={editCard.startDate}/>\n                            </div>\n                            <div className=\"card-edit__date\">\n                                End:\n                                <input type=\"date\" onChange={e => handleChange(e, 'endDate')} value={editCard.endDate}/>\n                            </div>\n                            <div className=\"card-edit__buttons\">\n                                <SaveButton handleClick={handleSubmit} />\n                                <DeleteButton theme=\"card\" handleRemove={() => handleRemove(id)} />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nCardEdit.propTypes = {\n    name: PropTypes.string.isRequired, \n    desc: PropTypes.string,  \n    startDate: PropTypes.string,  \n    endDate: PropTypes.string, \n    handleClick: PropTypes.func.isRequired, \n    handleRemove: PropTypes.func.isRequired, \n    handleChange: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired\n}\n\nexport default CardEdit;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport CardEdit from './CardEdit'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt, faAlignLeft, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass Card extends Component {\n    state = {\n        name: '', \n        desc: '', \n        startDate: '', \n        endDate: '',\n        isEditable: false,\n        editCard: {\n            name: '', \n            desc: '', \n            startDate: '', \n            endDate: '',\n        }\n    }\n    componentDidMount() {\n        this.setState({\n            ...this.props,\n            editCard: {\n                ...this.props\n            }\n        })\n    }  \n    handleClick = e => {\n        if(e.keyCode === 27 && this.state.isEditable) {\n          this.setState(prevState => ({\n            isEditable: !prevState.isEditable\n          }))\n        } else if (e.type === \"click\") {\n          this.setState(prevState => ({\n            isEditable: !prevState.isEditable\n          }))\n        }\n    }\n    handleChange = (e, property) => {\n        const val = e.target.value;\n        this.setState(prevState => ({\n            editCard: {\n                ...prevState.editCard,\n                [property]: val\n            }\n        }))\n    }\n    handleRemove = id => {\n        this.props.handleCardRemove(id);\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        const updatedCard = {\n            ...this.state.editCard\n        }\n        this.setState({\n            ...updatedCard,\n            isEditable: false\n        })\n        this.props.handleCardEdit(updatedCard);\n    }\n    render() {\n        const { name, desc, startDate, endDate, isEditable } = this.state \n        return(\n            <div>\n                <div className=\"card\">\n                    <p className=\"card__title\">{name}</p>\n                    <div className=\"card__info\">\n                        {desc && <FontAwesomeIcon className=\"card__icon card__icon--desc\" icon={faAlignLeft}/>}\n                        {(startDate || endDate) && <p className=\"card__dates\">\n                            <FontAwesomeIcon className=\"card__icon card__icon--calendar\" icon={faCalendarAlt}/>\n                            <span className=\"card__date\">{startDate ? startDate : '??'}</span>\n                            <span>-</span>\n                            <span className=\"card__date\">{endDate ? endDate : '??'}</span>\n                        </p>}\n                    </div>\n                    <button className=\"card__edit-button\" onClick={this.handleClick}><FontAwesomeIcon className=\"card__icon\" icon={faPencilAlt}/></button>\n                </div>\n                {isEditable\n                    && <CardEdit {...this.state}\n                            id={this.props.id}\n                            handleClick={this.handleClick}\n                            handleRemove={this.handleRemove}\n                            handleChange={this.handleChange}\n                            handleSubmit={this.handleSubmit}/>}\n            </div>\n        )\n    }\n}\n\nCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    desc: PropTypes.string,\n    startDate: PropTypes.string,\n    endDate: PropTypes.string\n}\n\nexport default Card;","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst NewCard = ({newCard, handleSubmit, handleChange}) => {\n    return (\n        <div className=\"new-card\">\n            <form onSubmit={handleSubmit}>\n                <input onChange={handleChange}  className=\"new-card__input\" placeholder=\"+ Add card\" value={newCard.name} type=\"text\"/>\n            </form>\n        </div>\n    )\n}\n\nNewCard.propTypes = {\n    newCard: PropTypes.object.isRequired,\n    handleSubmit: PropTypes.func.isRequired, \n    handleChange: PropTypes.func.isRequired\n}\n\nexport default NewCard;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass ListDeleteButton extends Component {\n    state = {\n        isAlertOpen: false\n    }\n    thisRef = React.createRef();\n    componentDidMount() {\n        document.addEventListener('click', this.handleClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClick);\n    }\n    handleClick = e => {\n        if(this.thisRef.current.contains(e.target)) {\n            this.setState(prevState => ({\n                isAlertOpen: !prevState.isAlertOpen\n            }))\n            return \n        }\n        this.setState({isAlertOpen: false})\n    }\n    render() {\n        return (\n            <div className=\"button__wrapper\" ref={this.thisRef}>\n                <button type=\"button\" className=\"list__del-button\"><FontAwesomeIcon className=\"list__icon\" icon={faTrashAlt}/></button>\n                {this.state.isAlertOpen && <div className={`button__inner${this.props.theme === 'card' || 'list' ? ' button__inner--card' : ''}`}>\n                    <p className=\"button__inner-text\">Are you sure?</p>\n                    <button onClick={this.props.handleRemove} type=\"button\"className=\"button button--delete\">Delete</button>\n                </div>}\n            </div>\n        )\n    }\n}\n\nListDeleteButton.propTypes = {\n    handleRemove: PropTypes.func.isRequired,\n    theme: PropTypes.string\n}\n\n\nexport default ListDeleteButton;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\nimport NewCard from './NewCard'\nimport ListDeleteButton from '../buttons/ListDeleteButton'\nimport { generateId, addItem, updateList, removeItem } from '../../utils/helpers'\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass List extends Component {\n  state = {\n    list: {\n      name: '',\n      items: []\n    },\n    newCard: {\n      name: '',\n      desc: '',\n      startDate: '',\n      endDate: ''\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      list: {\n        name: this.props.name,\n        items: this.props.items\n      }\n    })\n  }  \n  handleChange = e => {\n    const val = e.target.value;\n    this.setState(prevState => ({\n        list: {\n            ...prevState.list,\n            name: val\n        }\n    }))\n  }\n  handleCardChange = e => {\n    const val = e.target.value;\n    this.setState(prevState => ({\n        newCard: {\n            ...prevState.newCard,\n            name: val\n        }\n    }))\n  }\n  handleCardRemove = id => {\n    const updatedCards = removeItem(this.props.items, id)\n    const updatedList = {\n        ...this.state.list,\n        id: this.props.id,\n        items: updatedCards\n    }\n    this.setState(prevState => ({\n      list: {\n          ...prevState.list,\n          items: updatedCards\n      }\n  }))\n    this.props.handleListChange(updatedList);\n  }\n  handleCardEdit = card => {\n    const updatedCards = updateList(this.props.items, card);\n    const updatedList = {\n      ...this.state.list,\n      id: this.props.id,\n      items: updatedCards\n    }\n    this.setState(prevState => ({\n        list: {\n            ...prevState.list,\n            items: updatedCards\n        }\n    }))\n    this.props.handleListChange(updatedList);\n  }\n  handleSubmit = e => {\n    e.preventDefault()\n    const updatedList = {\n      ...this.state.list,\n      id: this.props.id,\n      name: this.state.list.name\n    }\n    this.props.handleListChange(updatedList);\n  }\n  handleCardSubmit = e => {\n    e.preventDefault()\n    const newCard = {\n      ...this.state.newCard,\n      id: generateId(),\n      name: this.state.newCard.name,\n    }\n    const updatedItems = addItem(this.state.list.items, newCard)\n    const updatedList = {\n      ...this.state.list,\n      id: this.props.id,\n      items: updatedItems\n    }\n    this.setState(prevState => ({\n      list: {\n        ...prevState.list,\n        items: updatedItems\n      },\n      newCard: {\n          ...prevState.newCard,\n          name: ''\n      }\n    }))\n    this.props.handleListChange(updatedList);\n  }\n  render() {\n    return (\n      <Droppable droppableId={this.props.id} type=\"card\">\n        {(provided, snapshot) => (\n          <div className={`list${snapshot.isDraggingOver ? ' list--drag-over' : ''}`}>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"list__header\">\n                  <input onChange={this.handleChange} onBlur={this.handleSubmit} className=\"list__title\" value={this.state.list.name}/>\n                  <FontAwesomeIcon className=\"list__icon list__icon--hand\" icon={faHandPaper}/>\n                  <ListDeleteButton theme=\"list\" handleRemove={() => this.props.handleRemove(this.props.id)} />\n              </div>\n            </form>\n            {/* <Scrollbars> */}\n            <div className=\"list__cards-wrapper\" ref={provided.innerRef}>\n            \n            {this.props.items.map((card, index) => ( \n              <Draggable\n                  type=\"card\"\n                  key={card.id}\n                  draggableId={card.id}\n                  index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        className={snapshot.isDragging ? 'card__wrapper card__wrapper-active' : 'card__wrapper'}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={provided.draggableProps.style}>\n                        <Card key={card.id} {...card} handleCardRemove={this.handleCardRemove} handleCardEdit={this.handleCardEdit}/>\n                      </div>\n                    )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n            <NewCard \n              newCard={this.state.newCard} \n              handleChange={this.handleCardChange}\n              handleSubmit={this.handleCardSubmit}/>\n              \n            </div>\n            {/* </Scrollbars> */}\n          </div>\n        )}\n      </Droppable>\n    )\n  }\n}\nList.propTypes = {\n    id: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    name: PropTypes.string.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    handleListChange: PropTypes.func.isRequired\n}\n\nexport default List;","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst NewList = ({newListName, handleSubmit, handleChange}) => {\n    return (\n        <div className=\"list new-list\">\n            <form onSubmit={handleSubmit}>\n                <input onChange={handleChange} placeholder=\"+ Add board\" className=\"new-list__input\" value={newListName} type=\"text\"/>\n            </form>\n        </div>\n    )\n}\n\nNewList.propTypes = {\n    newListName: PropTypes.string.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired\n}\n\nexport default NewList;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport List from  './List'\nimport NewList from './NewList'\nimport { generateId, addItem, updateList, removeItem, findById, reorder, move } from '../../utils/helpers'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nclass BoardLists extends Component {\n  state = {\n    newListName: ''\n  }\n  handleChange = e => {\n    this.setState({newListName: e.target.value})\n  }\n  handleSubmit = e => {\n    e.preventDefault()\n    const newList = {\n      \"id\": generateId(),\n      \"name\": this.state.newListName,\n      \"items\": []\n    }\n    this.setState({newListName: ''})\n    const updatedLists = addItem(this.props.lists, newList);\n    this.props.handleListsUpdate(updatedLists);\n  }\n  handleRemove = id => {\n    const updatedLists = removeItem(this.props.lists, id);\n    this.props.handleListsUpdate(updatedLists);\n  }\n  handleListChange = list => {\n    const updatedLists = updateList(this.props.lists, list);\n    this.props.handleListsUpdate(updatedLists);\n  }\n  onDragEnd = result => {\n    const { source, destination } = result;\n    \n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId === this.props.id) {\n      const items = reorder(\n        this.props.lists,\n        source.index,\n        destination.index\n      )\n      this.props.handleListsUpdate(items)\n    } else if (source.droppableId === destination.droppableId) {\n        const list = findById(source.droppableId, this.props.lists)\n        const items = reorder(\n            list.items,\n            source.index,\n            destination.index\n        );\n        const newList = {\n          ...list,\n          items: items\n        }\n        this.handleListChange(newList)\n    } else {\n        const sourceList = findById(source.droppableId, this.props.lists)\n        const destList = findById(destination.droppableId, this.props.lists)\n        const result = move(\n            sourceList.items,\n            destList.items,\n            source,\n            destination\n        );\n        const newSourceList = {\n          ...sourceList,\n          items: result[source.droppableId]\n        }\n        const newDestList = {\n          ...destList,\n          items: result[destination.droppableId]\n        }\n        this.handleListChange(newSourceList)\n        this.handleListChange(newDestList)\n      }\n  }\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"board-lists__wrapper\">\n              <Droppable droppableId={this.props.id} direction=\"horizontal\" type=\"list\">\n              {(provided, snapshot) => (\n                <div\n                  className=\"board-lists\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {this.props.lists.map((list, index) => (\n                    <Draggable key={list.id} draggableId={list.id} index={index} type=\"list\">\n                      {(provided, snapshot) => (\n                        <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}>\n                          <List handleListChange={this.handleListChange} handleRemove={this.handleRemove} key={list.id} {...list}/>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                  <NewList\n                    newListName={this.state.newListName}\n                    handleChange={this.handleChange}\n                    handleSubmit={this.handleSubmit} />\n                </div>\n              )}\n              </Droppable>\n        </div>\n      </DragDropContext>\n    )\n  }\n} \n\nBoardLists.propTypes = {\n    id: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    handleListsUpdate: PropTypes.func.isRequired\n}\n\nexport default BoardLists;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport BoardHeader from '../components/board/BoardHeader'\nimport BoardLists from '../components/board/BoardLists'\nimport { generateId, addItem } from '../utils/helpers'\n\nclass Board extends Component {\n    state = {\n        board: {\n            name: '',\n            theme: '',\n            lists: []\n        },\n        display: \"kanban\",\n        newList: ''\n    }\n    componentDidMount() {\n        this.setState({board: this.props.board})\n    }\n    handleUpdate = update => {\n        const upadtedBoard = {\n            ...this.state.board,\n            id: this.props.id,\n            name: update.name,\n            theme: update.theme\n        }\n        this.setState(prevState => ({\n            board: {\n                ...prevState.board,\n                name: update.name,\n                theme: update.theme\n            }\n        }))\n        this.props.updatedBoard(upadtedBoard)\n    }\n    handleDisplayChange = e => {\n        this.setState({display: e.target.value})\n    }\n    handleAddListChange = e => {\n        this.setState({newList: e.target.value})\n    }\n    handleAddListSubmit = e => {\n        e.preventDefault()\n        const newList = {\n            id: generateId(),\n            name: this.state.newList,\n            items: []\n        }\n        const addList = addItem(this.state.board.lists, newList)\n        const upadtedBoard = {\n            ...this.state.board,\n            lists: addList\n        }\n        this.setState(prevState => ({\n            board: {\n                ...prevState.board,\n                lists: addList\n            },\n            display: \"default\",\n            newList: ''\n        }))\n        this.props.updatedBoard(upadtedBoard)\n    }\n    handleListsUpdate = lists => {\n        const upadtedBoard = {\n            ...this.state.board,\n            lists: lists\n        }\n        this.setState(prevState => ({\n            board: {\n                ...prevState.board,\n                lists: lists\n            }\n        })) \n        this.props.updatedBoard(upadtedBoard)\n    }\n    render() {\n        return (\n            <div className={`board ${this.state.board.theme.toLowerCase().split(' ').join('-')}`}>\n                <BoardHeader id={this.props.id} \n                    name={this.state.board.name} \n                    handleRemove={this.props.handleRemove} \n                    handleDisplayChange={this.handleDisplayChange}\n                    board={this.props.board} \n                    display={this.state.display}\n                    handleUpdate={this.handleUpdate} />\n                <BoardLists \n                    id={this.props.id}\n                    lists={this.state.board.lists} \n                    handleListsUpdate={this.handleListsUpdate} />\n                <div className=\"theme-background\"></div>\n            </div>\n        )\n    }\n}\n\nBoard.propTypes = {\n  board: PropTypes.object.isRequired,\n  id: PropTypes.string.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  updatedBoard: PropTypes.func.isRequired,\n}\n\nexport default Board; \n","import React, { Component } from 'react';\nimport Dashboard from './pages/Dashboard';\nimport Board from './pages/Board'\nimport { findById, addItem, updateList, removeItem } from './utils/helpers'\nimport { loadBoards, saveBoards } from './utils/service'\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\"; \nimport './styles/styles.css';\n\nclass App extends Component {\n  state = {\n    boards: []\n  }\n  componentDidMount() {\n    const boards = loadBoards()\n    this.setState({boards})\n  }\n  handleCreate = newBoard => {\n    const updatedBoards = addItem(this.state.boards, newBoard)\n    this.setState({boards: updatedBoards})\n    saveBoards(updatedBoards)\n  }\n  handleRemove = id => {\n    const updatedBoards = removeItem(this.state.boards, id)\n    this.setState({boards: updatedBoards})\n    saveBoards(updatedBoards)\n  }\n  updatedBoard = board => {\n    const upadtedBoard = updateList(this.state.boards, board)\n    this.setState({boards: upadtedBoard})\n    saveBoards(upadtedBoard)\n  }\n  render() {  \n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path='/' render={props => (<Dashboard \n                    handleCreate={this.handleCreate} \n                    boards={this.state.boards} \n                    {...props}/>)\n                }/>\n                <Route path=\"/board/:id\" \n                render={props => {\n                    const ifCorrectID = findById(props.match.params.id, this.state.boards)\n                    return (ifCorrectID \n                      ? <Board id={props.match.params.id} \n                          board={ifCorrectID} \n                          handleRemove={this.handleRemove} \n                          updatedBoard={this.updatedBoard} /> \n                      : <Redirect to='/' />)\n                  }\n                }/>\n                <Redirect to='/'/>\n            </Switch>\n        </BrowserRouter>\n    );\n  } \n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
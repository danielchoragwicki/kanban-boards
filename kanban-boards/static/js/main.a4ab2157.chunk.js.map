{"version":3,"sources":["components/common/ThemeRadio.js","utils/config.js","components/inputs/AddBoardInput.js","utils/helpers.js","components/dashboard/DashboardItem.js","components/dashboard/NewDashboardItem.js","components/dashboard/BoardsList.js","pages/Dashboard.js","components/buttons/ThemeButton.js","components/buttons/DeleteButton.js","components/board/BoardHeader.js","components/buttons/SaveButton.js","components/board/CardEdit.js","components/board/Card.js","components/board/NewCard.js","components/buttons/ListDeleteButton.js","components/board/List.js","components/board/NewList.js","components/board/BoardLists.js","pages/Board.js","utils/service.js","App.js","registerServiceWorker.js","index.js"],"names":["ThemeRadio","_ref","theme","handleRadioChange","currentTheme","react_default","a","createElement","title","className","concat","toLowerCase","replace","onChange","checked","type","name","value","index_es","icon","faCheck","config","THEMES","AddBoardInput","state","currentBoard","isDisabled","handleChange","e","_this","props","handleInputChange","document","addEventListener","this","handleClick","removeEventListener","_this$props","handleSubmit","handleDelete","onSubmit","onClick","faTimes","autoFocus","map","common_ThemeRadio","key","disabled","React","Component","generateId","Math","random","toString","substr","findById","id","list","find","item","addItem","Object","toConsumableArray","updateList","updated","updatedItem","findIndex","slice","removeItem","removedIndex","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","droppableId","mapBoardToApi","board","Id","Name","Theme","KanbanLists","lists","boardId","Cards","items","card","Descritpion","desc","StartDate","startDate","EndDate","endDate","DashboardItem","cards","reduce","sum","length","Link","to","elem","limit","after","content","trim","split","join","truncate","NewDashboardItem","BoardsList","boards","dashboard_DashboardItem","assign","dashboard_NewDashboardItem","Dashboard","isInputOpen","errSubmit","keyCode","setState","prevState","val","target","objectSpread","preventDefault","newBoard","handleCreate","handleErrorSubmit","alert","handleDeleteLocal","window","location","reload","_this$state","submit","dashboard_BoardsList","inputs_AddBoardInput","ThemeButton","isOpen","thisRef","createRef","current","contains","_this2","ref","DeleteButton","isAlertOpen","handleRemove","BoardHeader","handleNameChange","upadtedBoard","handleUpdate","handleDisplayChange","display","faArrowLeft","onBlur","buttons_ThemeButton","buttons_DeleteButton","SaveButton","CardEdit","editCard","placeholder","buttons_SaveButton","Card","isEditable","property","defineProperty","handleCardRemove","updatedCard","handleCardEdit","faAlignLeft","faCalendarAlt","faPencilAlt","board_CardEdit","NewCard","newCard","ListDeleteButton","faTrashAlt","List","handleCardChange","updatedCards","updatedList","handleListChange","handleCardSubmit","updatedItems","react_beautiful_dnd_esm","provided","snapshot","isDraggingOver","faHandPaper","buttons_ListDeleteButton","innerRef","draggableId","isDragging","draggableProps","dragHandleProps","style","board_Card","board_NewCard","NewList","newListName","BoardLists","newList","updatedLists","handleListsUpdate","onDragEnd","sourceList","destList","newSourceList","newDestList","direction","droppableProps","board_List","board_NewList","Board","update","updatedBoard","handleAddListChange","handleAddListSubmit","addList","board_BoardHeader","board_BoardLists","baseUrl","createBoard","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","saveBoard","destroyBoard","App","updatedBoards","console","log","mapBoards","_this3","BrowserRouter","basename","process","Switch","Route","exact","path","render","pages_Dashboard","ifCorrectID","match","params","pages_Board","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","getElementById","URL","origin","response","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a4ab2157.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ThemeRadio = ({theme, handleRadioChange, currentTheme}) => {\r\n    return (\r\n        <label title={theme} className={`theme-radio ${theme.toLowerCase().replace(\" \", \"-\")}`}>\r\n            <input className=\"theme-radio__input\" onChange={handleRadioChange} checked={currentTheme === theme} type=\"radio\" name=\"theme\" value={theme}/>\r\n            <FontAwesomeIcon className=\"theme-radio__icon\" icon={faCheck}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nThemeRadio.propTypes = {\r\n    theme: PropTypes.string.isRequired,\r\n    currentTheme: PropTypes.string.isRequired,\r\n    handleRadioChange: PropTypes.func.isRequired\r\n}\r\n  \r\n\r\nexport default ThemeRadio;","export const config = {\r\n    THEMES: [\"Malibu Beach\", \"New Life\", \"Night Fade\", \"Sunny Morning\", \"Love Kiss\"]\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ThemeRadio from  '../common/ThemeRadio'\r\nimport { config } from '../../utils/config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass AddBoardInput extends React.Component {\r\n    state = {\r\n        currentBoard: {\r\n            name: '',\r\n            theme: ''\r\n        },\r\n        // errMessage: '',\r\n        isDisabled: false\r\n    }\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    // handleError = () => {\r\n    //     if(this.props.currentBoard.name.length > config.MAX_BOARD_TITLE_LENGTH || this.props.currentBoard.name.length < config.MIN_BOARD_TITLE_LENGTH) {\r\n    //         this.setState({\r\n    //           errMessage: `The length of the title should be between ${config.MIN_BOARD_TITLE_LENGTH} and ${config.MAX_BOARD_TITLE_LENGTH}`,\r\n    //         })} else {\r\n    //         this.setState({\r\n    //           errMessage: '',\r\n    //         })\r\n    //     }\r\n    // }\r\n    handleChange = e => {\r\n        this.props.handleInputChange(e)\r\n        // this.handleError()\r\n    }\r\n    render () {\r\n        const {handleClick, handleSubmit, handleRadioChange, currentBoard, handleDelete} = this.props;\r\n        return (\r\n            <div className=\"addboard__overlay\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <button type=\"button\" className=\"addboard__button\" onClick={handleClick}><FontAwesomeIcon icon={faTimes}/></button>  \r\n                    <div className=\"addboard__inner\">\r\n                        <div className=\"addboard__input-wrapper\">\r\n                            <input type=\"text\" \r\n                            autoFocus\r\n                            className={\"addboard__input\"} \r\n                            value={currentBoard.name} \r\n                            onChange={this.handleChange}/>\r\n                            {/* <p className=\"addboard__message\">{this.state.errMessage}</p> */}\r\n                        </div>\r\n                        <div className=\"addboard__themes\">\r\n                            {config.THEMES.map(theme =>\r\n                                <ThemeRadio key={theme} theme={theme} handleRadioChange={handleRadioChange} currentTheme={currentBoard.theme} />\r\n                            )}\r\n                        </div>\r\n                        <button \r\n                            className={`addboard__submit ${this.state.isDisabled ?'addboard__submit--err' : ''}`} \r\n                            type=\"submit\" \r\n                            disabled={this.state.isDisabled && false}>Add board</button>\r\n                        {handleDelete && <button \r\n                            className=\"addboard__submit addboard__submit--del\" \r\n                            type=\"submit\" \r\n                            disabled={this.state.isDisabled && true}>Remove board</button>}\r\n                    </div>\r\n                </form>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nAddBoardInput.propTypes = {\r\n    errSubmit: PropTypes.bool,\r\n    currentBoard: PropTypes.object.isRequired,\r\n    handleClick: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    handleRadioChange: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func\r\n}\r\n\r\nexport default AddBoardInput;","export const generateId = () => Math.random().toString(36).substr(2, 16)\r\n\r\nexport const findById = (id, list) => list.find(item => item.id === id)\r\n\r\nexport const addItem = (list, item) => [...list, item]\r\n\r\nexport const updateList = (list, updated) => {\r\n  const updatedItem = list.findIndex(item => item.id === updated.id)\r\n  return [\r\n    ...list.slice(0, updatedItem),\r\n    updated,\r\n    ...list.slice(updatedItem+1)\r\n  ]\r\n}\r\n\r\nexport const removeItem = (list, id) => {\r\n  const removedIndex = list.findIndex(item => item.id === id)\r\n  return [\r\n    ...list.slice(0, removedIndex),\r\n    ...list.slice(removedIndex+1)\r\n  ]\r\n}\r\n\r\nexport const truncate = (elem, limit, after) => {\r\n  if (!elem || !limit) return\r\n  let content = elem.trim()\r\n  if (content.length > limit) {\r\n    content = content.split('').slice(0, limit)\r\n    content = content.join('') + (after ? after : '')\r\n  }\r\n  return content\r\n}\r\n\r\nexport const reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list)\r\n  const [removed] = result.splice(startIndex, 1)\r\n  result.splice(endIndex, 0, removed)\r\n\r\n  return result\r\n}\r\n\r\nexport const move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source)\r\n  const destClone = Array.from(destination)\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed)\r\n\r\n  const result = {}\r\n  result[droppableSource.droppableId] = sourceClone\r\n  result[droppableDestination.droppableId] = destClone\r\n\r\n  return result\r\n};\r\n\r\n\r\nexport const mapBoards = boards => {\r\n  let mapBoards = boards.map(board => {\r\n    const mapBoardItem = {\r\n      id: board.Id.toString(),\r\n      name: board.Name,\r\n      theme: board.Theme,\r\n      lists: board.KanbanLists.map(list => {\r\n        const mapListItem = {\r\n          id: list.Id.toString(),\r\n          name: list.Name,\r\n          boardId: list.boardId,\r\n          items: list.Cards.map(card => {\r\n            const mapCard = {\r\n              id: card.Id.toString(),\r\n              name: card.Name,\r\n              desc: card.Descritpion,\r\n              startDate: card.StartDate,\r\n              endDate: card.EndDate,\r\n            }\r\n            return mapCard\r\n          }),\r\n        }\r\n        return mapListItem\r\n      }),\r\n    }\r\n    return mapBoardItem\r\n  })\r\n  return mapBoards\r\n}\r\n\r\nexport const mapBoard = board => {\r\n  const mapBoardItem = {\r\n    id: board.Id.toString(),\r\n    name: board.Name,\r\n    theme: board.Theme,\r\n    lists: board.KanbanLists.map(list => {\r\n      const mapListItem = {\r\n        id: list.Id.toString(),\r\n        name: list.Name,\r\n        boardId: list.boardId,\r\n        items: list.Cards.map(card => {\r\n          const mapCard = {\r\n            id: card.Id.toString(),\r\n            name: card.Name,\r\n            desc: card.Descritpion,\r\n            startDate: card.StartDate,\r\n            endDate: card.EndDate,\r\n          }\r\n          return mapCard\r\n        }),\r\n      }\r\n      return mapListItem\r\n    }),\r\n  }\r\n  return mapBoardItem\r\n}\r\n\r\n// export const mapBoardsToApi = boards => {\r\n//   let mapBoardsToApi = boards.map(board => {\r\n//     const mapBoardItem = {\r\n//       Id: board.id,\r\n//       Name: board.name,\r\n//       Theme: board.theme,\r\n//       KanbanLists: board.lists.map(list => {\r\n//         const mapListItem = {\r\n//           Id: list.id,\r\n//           Name: list.name,\r\n//           boardId: list.boardId,\r\n//           Cards: list.items.map(card => {\r\n//             const mapCard = {\r\n//               Id: card.id,\r\n//               Name: card.name,\r\n//               Descritpion: card.desc,\r\n//               StartDate: card.startDate,\r\n//               EndDate: card.endDate,\r\n//             }\r\n//             return mapCard\r\n//           }),\r\n//         }\r\n//         return mapListItem\r\n//       }),\r\n//     }\r\n//     return mapBoardItem\r\n//   })\r\n//   return mapBoardsToApi\r\n// }\r\n\r\nexport const mapBoardToApi = board => {\r\n  const mapBoardItem = {\r\n    Id: board.id,\r\n    Name: board.name,\r\n    Theme: board.theme,\r\n    KanbanLists: board.lists.map(list => {\r\n      const mapListItem = {\r\n        Id: list.id,\r\n        Name: list.name,\r\n        boardId: list.boardId,\r\n        Cards: list.items.map(card => {\r\n          const mapCard = {\r\n            Id: card.id,\r\n            Name: card.name,\r\n            Descritpion: card.desc,\r\n            StartDate: card.startDate,\r\n            EndDate: card.endDate,\r\n          }\r\n          return mapCard\r\n        }),\r\n      }\r\n      return mapListItem\r\n    }),\r\n  }\r\n  return mapBoardItem\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"; \r\nimport { truncate } from '../../utils/helpers'\r\n\r\nconst DashboardItem = ({id, name, lists, theme}) => {\r\n    const cards = lists.reduce((sum, item) => {\r\n        sum += item.items.length\r\n        return sum\r\n    }, 0)\r\n    return (\r\n        <div className=\"board-item\">\r\n            <Link to={`/board/${id}`} className={`board-item__link ${theme.toLowerCase().replace(\" \", \"-\")}`}>\r\n                <p className=\"board-item__title\">{truncate(name, 20, '...')}</p>\r\n                <div className=\"board-stats\">\r\n                    <p className=\"board-stats__item\">\r\n                        <span className=\"board-stats__text board-stats__text--number\">{lists.length}</span>\r\n                        <span className=\"board-stats__text\">Lists</span> \r\n                    </p>\r\n                    <p className=\"board-stats__item\">\r\n                        <span className=\"board-stats__text board-stats__text--number\">{cards}</span>\r\n                        <span className=\"board-stats__text\">Cards</span> \r\n                    </p>\r\n                </div>\r\n            </Link>\r\n        </div> \r\n    )\r\n}\r\n\r\nDashboardItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    lists: PropTypes.array.isRequired,\r\n    theme: PropTypes.string.isRequired\r\n}\r\n\r\nexport default DashboardItem;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst NewDashboardItem = props => {\r\n    return (\r\n        <div className=\"board-item\">\r\n            <button className=\"board-item__link board-item__link--add\" onClick={props.handleClick}>\r\n                <div className=\"board-item__icon\">+</div>\r\n                <p className=\"board-item__title\">Add board</p>\r\n            </button>\r\n        </div> \r\n    )\r\n}\r\n\r\nNewDashboardItem.propTypes = {\r\n    handleClick: PropTypes.func.isRequired\r\n}\r\n  \r\n\r\nexport default NewDashboardItem;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DashboardItem from './DashboardItem'\r\nimport NewBoardItem from './NewDashboardItem'\r\n \r\nconst BoardsList = ({boards, handleClick}) => {\r\n  return (\r\n    <div className=\"boards-list\">\r\n      {boards.map(board => {\r\n        return <DashboardItem key={board.id} {...board}/> \r\n      })}\r\n      <NewBoardItem handleClick={handleClick} />\r\n    </div>\r\n  )\r\n}\r\n\r\nBoardsList.propTypes = {\r\n  boards: PropTypes.array.isRequired,\r\n  handleClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardsList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport AddBoardInput from '../components/inputs/AddBoardInput'\r\nimport BoardsList from '../components/dashboard/BoardsList'\r\nimport { generateId } from '../utils/helpers'\r\n// import { deleteBoards } from '../utils/service'\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    isInputOpen: false,\r\n    errSubmit: false,\r\n    currentBoard: {\r\n        name: '',\r\n        theme: 'New Life'\r\n    }\r\n  }\r\n  handleClick = e => {\r\n    if(e.keyCode === 27 && this.state.isInputOpen) {\r\n      this.setState(prevState => ({\r\n          isInputOpen: !prevState.isInputOpen\r\n      }))\r\n    } else if (e.type === \"click\") {\r\n      this.setState(prevState => ({\r\n          isInputOpen: !prevState.isInputOpen\r\n      }))\r\n    }\r\n  }\r\n  handleInputChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        currentBoard: {\r\n            ...prevState.currentBoard,\r\n            name: val\r\n        }\r\n    }))\r\n  }\r\n  handleRadioChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        currentBoard: {\r\n            ...prevState.currentBoard,\r\n            theme: val\r\n        }\r\n    }))\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const newBoard = {\r\n        id: generateId(),\r\n        name: this.state.currentBoard.name,\r\n        theme: this.state.currentBoard.theme,\r\n        lists: []\r\n    }\r\n    this.setState({\r\n        isInputOpen: false,\r\n        errSubmit: false,\r\n        currentBoard: {\r\n            name: '',\r\n            theme: 'New Life'\r\n        }\r\n    })\r\n    this.props.handleCreate(newBoard)\r\n  }\r\n  handleErrorSubmit = e => {\r\n    e.preventDefault()\r\n    alert('Empty input. Add some text.')\r\n  }\r\n  handleDeleteLocal = e => {\r\n    // deleteBoards()\r\n    window.location.reload()\r\n  }\r\n  render () {\r\n    const { currentBoard, errSubmit, isInputOpen } = this.state\r\n    const { boards } = this.props\r\n    const submit = currentBoard.name === '' \r\n      ? this.handleErrorSubmit\r\n      : this.handleSubmit\r\n    return (\r\n      <div className=\"dashboard\">\r\n          <button className=\"delete-local\" onClick={this.handleDeleteLocal}>Delete localStorage</button>\r\n          <BoardsList \r\n            boards={boards} \r\n            handleClick={this.handleClick} />\r\n          {isInputOpen && <AddBoardInput \r\n            errSubmit={errSubmit}\r\n            currentBoard={currentBoard}  \r\n            handleClick={this.handleClick} \r\n            handleInputChange={this.handleInputChange} \r\n            handleRadioChange={this.handleRadioChange} \r\n            handleSubmit={submit} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  boards: PropTypes.array.isRequired,\r\n  handleCreate: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Dashboard;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ThemeRadio from  '../common/ThemeRadio'\r\nimport { config } from '../../utils/config'\r\n\r\nclass ThemeButton extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    thisRef = React.createRef();\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    }\r\n    handleClick = e => {\r\n        if(this.thisRef.current.contains(e.target)) {\r\n            this.setState(prevState => ({\r\n                isOpen: true\r\n            }))\r\n            return \r\n        }\r\n        this.setState({isOpen: false})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"button__wrapper\" ref={this.thisRef}>\r\n                <button type=\"button\" className=\"button\">Change Theme</button>\r\n                {this.state.isOpen && <div className=\"button__inner button__inner--themes\">\r\n                    {config.THEMES.map(theme =>\r\n                        <ThemeRadio key={theme} theme={theme} handleRadioChange={this.props.handleRadioChange} currentTheme={this.props.currentTheme} />\r\n                    )}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nThemeButton.propTypes = {\r\n    handleRadioChange: PropTypes.func.isRequired,\r\n    currentTheme: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default ThemeButton;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass DeleteButton extends Component {\r\n    state = {\r\n        isAlertOpen: false\r\n    }\r\n    thisRef = React.createRef();\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    }\r\n    handleClick = e => {\r\n        if(this.thisRef.current.contains(e.target)) {\r\n            this.setState(prevState => ({\r\n                isAlertOpen: !prevState.isAlertOpen\r\n            }))\r\n            return \r\n        }\r\n        this.setState({isAlertOpen: false})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"button__wrapper\" ref={this.thisRef}>\r\n                <button type=\"button\" className={`button${this.props.theme === 'card' ? ' button--delete' : ''}`}>Remove {this.props.theme === 'card' ? 'card' : 'board'}</button>\r\n                {this.state.isAlertOpen && <div className={`button__inner${this.props.theme === 'card' ? ' button__inner--card' : ''}`}>\r\n                    <p className=\"button__inner-text\">Are you sure?</p>\r\n                    <button onClick={this.props.handleRemove} type=\"button\"className=\"button button--delete\">Delete</button>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteButton.propTypes = {\r\n    handleRemove: PropTypes.func.isRequired,\r\n    theme: PropTypes.string\r\n}\r\n\r\n\r\nexport default DeleteButton;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\nimport ThemeButton from '../buttons/ThemeButton'\r\nimport DeleteButton from '../buttons/DeleteButton'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass BoardHeader extends React.Component {\r\n    state = {\r\n        currentBoard: {\r\n            name: '',\r\n            theme: ''\r\n        },\r\n        isInputOpen: false,\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentBoard: {\r\n                name: this.props.board.name,\r\n                theme: this.props.board.theme\r\n            }\r\n        })\r\n    }\r\n    handleNameChange = e => {\r\n        const val = e.target.value;\r\n        this.setState(prevState => ({\r\n            currentBoard: {\r\n                ...prevState.currentBoard,\r\n                name: val\r\n            }\r\n        }))\r\n        \r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const upadtedBoard = {\r\n            ...this.state.currentBoard,\r\n        }\r\n        this.props.handleUpdate(upadtedBoard)\r\n    }\r\n    handleRadioChange = e => {\r\n        const val = e.target.value;\r\n        const upadtedBoard = {\r\n            ...this.state.currentBoard,\r\n            theme: val\r\n        }\r\n        this.setState(prevState => ({\r\n            currentBoard: {\r\n                ...prevState.currentBoard,\r\n                theme: val\r\n            }\r\n        }))\r\n        this.props.handleUpdate(upadtedBoard)\r\n    }\r\n    \r\n    render() {\r\n        const {handleDisplayChange, id, handleRemove, display} = this.props \r\n        return (\r\n            <div className=\"board-header__wrapper\">\r\n                <header className=\"board-header\">\r\n                    <Link className=\"back-link\" to={process.env.PUBLIC_URL + '/'}><FontAwesomeIcon icon={faArrowLeft}/></Link>\r\n                    <div className=\"board-header__inner\">\r\n                        <h1 className=\"board-header__title\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <input className=\"board-header__input\"\r\n                                    value={this.state.currentBoard.name}\r\n                                    onChange={this.handleNameChange} \r\n                                    onBlur={this.handleSubmit}\r\n                                    type=\"text\"/>\r\n                            </form>\r\n                        </h1>\r\n                        <ThemeButton currentTheme={this.state.currentBoard.theme} handleRadioChange={this.handleRadioChange} />\r\n                        <DeleteButton handleRemove={() => handleRemove(id)} />\r\n                    </div>\r\n                    <div className=\"board-header__display\">\r\n                        <label className={`display display--kanban${display === \"kanban\" ? ' active' : ''}`}>\r\n                            <input type=\"checkbox\" onChange={handleDisplayChange} checked={display === \"kanban\"} value=\"kanban\"/>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                        </label>\r\n                        <label className={`display display--list${display === \"list\" ? ' active' : ''}`}>\r\n                            <input type=\"checkbox\" disabled onChange={handleDisplayChange} checked={display === \"list\"} value=\"list\"/>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                        </label>\r\n                        <label className={`display display--gantt${display === \"gantt\" ? ' active' : ''}`}>\r\n                            <input type=\"checkbox\" disabled onChange={handleDisplayChange} checked={display === \"gantt\"} value=\"gantt\"/>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                            <span className=\"display__line\"></span>\r\n                        </label>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nBoardHeader.propTypes = {\r\n    board: PropTypes.object.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    handleRemove: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default BoardHeader;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst SaveButton = ({handleClick, disabled}) => {\r\n    return (\r\n        <button \r\n            onClick={handleClick}\r\n            type=\"submit\"\r\n            className=\"button button--save\">Save</button>\r\n    )\r\n}\r\n\r\nSaveButton.propTypes = {\r\n    handleClick: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\n\r\nexport default SaveButton;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteButton from '../buttons/DeleteButton'\r\nimport SaveButton from '../buttons/SaveButton'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass CardEdit extends Component {\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.props.handleClick);\r\n    }\r\n    render() {\r\n        const {id, editCard, handleRemove, handleChange, handleSubmit, handleClick} = this.props\r\n        return(\r\n            <div className=\"card-edit\">\r\n                <div className=\"card-edit__inner\">\r\n                    <button className=\"card-edit__exit-button\" onClick={handleClick}><FontAwesomeIcon icon={faTimes}/></button>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"card-edit__form\">\r\n                            <input className=\"card-edit__title\" onChange={e => handleChange(e, 'name')} value={editCard.name}/>\r\n                            <textarea placeholder=\"Descritpion...\" className=\"card-edit__desc\" onChange={e => handleChange(e, 'desc')} value={editCard.desc}/>\r\n                            <div className=\"card-edit__date\">\r\n                                Start:\r\n                                <input type=\"date\" onChange={e => handleChange(e, 'startDate')} value={editCard.startDate}/>\r\n                            </div>\r\n                            <div className=\"card-edit__date\">\r\n                                End:\r\n                                <input type=\"date\" onChange={e => handleChange(e, 'endDate')} value={editCard.endDate}/>\r\n                            </div>\r\n                            <div className=\"card-edit__buttons\">\r\n                                <SaveButton handleClick={handleSubmit} />\r\n                                <DeleteButton theme=\"card\" handleRemove={() => handleRemove(id)} />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCardEdit.propTypes = {\r\n    name: PropTypes.string.isRequired, \r\n    desc: PropTypes.string,  \r\n    startDate: PropTypes.string,  \r\n    endDate: PropTypes.string, \r\n    handleClick: PropTypes.func.isRequired, \r\n    handleRemove: PropTypes.func.isRequired, \r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CardEdit;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CardEdit from './CardEdit'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt, faAlignLeft, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Card extends Component {\r\n    state = {\r\n        name: '', \r\n        desc: '', \r\n        startDate: '', \r\n        endDate: '',\r\n        isEditable: false,\r\n        editCard: {\r\n            name: '', \r\n            desc: '', \r\n            startDate: '', \r\n            endDate: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.props,\r\n            editCard: {\r\n                ...this.props\r\n            }\r\n        })\r\n    }  \r\n    handleClick = e => {\r\n        if(e.keyCode === 27 && this.state.isEditable) {\r\n          this.setState(prevState => ({\r\n            isEditable: !prevState.isEditable\r\n          }))\r\n        } else if (e.type === \"click\") {\r\n          this.setState(prevState => ({\r\n            isEditable: !prevState.isEditable\r\n          }))\r\n        }\r\n    }\r\n    handleChange = (e, property) => {\r\n        const val = e.target.value;\r\n        this.setState(prevState => ({\r\n            editCard: {\r\n                ...prevState.editCard,\r\n                [property]: val\r\n            }\r\n        }))\r\n    }\r\n    handleRemove = id => {\r\n        this.props.handleCardRemove(id);\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const updatedCard = {\r\n            ...this.state.editCard\r\n        }\r\n        this.setState({\r\n            ...updatedCard,\r\n            isEditable: false\r\n        })\r\n        this.props.handleCardEdit(updatedCard);\r\n    }\r\n    render() {\r\n        const { name, desc, startDate, endDate, isEditable } = this.state \r\n        return(\r\n            <div>\r\n                <div className=\"card\">\r\n                    <p className=\"card__title\">{name}</p>\r\n                    <div className=\"card__info\">\r\n                        {desc && <FontAwesomeIcon className=\"card__icon card__icon--desc\" icon={faAlignLeft}/>}\r\n                        {(startDate || endDate) && <p className=\"card__dates\">\r\n                            <FontAwesomeIcon className=\"card__icon card__icon--calendar\" icon={faCalendarAlt}/>\r\n                            <span className=\"card__date\">{startDate ? startDate : '??'}</span>\r\n                            <span>-</span>\r\n                            <span className=\"card__date\">{endDate ? endDate : '??'}</span>\r\n                        </p>}\r\n                    </div>\r\n                    <button className=\"card__edit-button\" onClick={this.handleClick}><FontAwesomeIcon className=\"card__icon\" icon={faPencilAlt}/></button>\r\n                </div>\r\n                {isEditable\r\n                    && <CardEdit {...this.state}\r\n                            id={this.props.id}\r\n                            handleClick={this.handleClick}\r\n                            handleRemove={this.handleRemove}\r\n                            handleChange={this.handleChange}\r\n                            handleSubmit={this.handleSubmit}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCard.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    desc: PropTypes.string,\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst NewCard = ({newCard, handleSubmit, handleChange}) => {\r\n    return (\r\n        <div className=\"new-card\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input onChange={handleChange}  className=\"new-card__input\" placeholder=\"+ Add card\" value={newCard.name} type=\"text\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nNewCard.propTypes = {\r\n    newCard: PropTypes.object.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired, \r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NewCard;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ListDeleteButton extends Component {\r\n    state = {\r\n        isAlertOpen: false\r\n    }\r\n    thisRef = React.createRef();\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    }\r\n    handleClick = e => {\r\n        if(this.thisRef.current.contains(e.target)) {\r\n            this.setState(prevState => ({\r\n                isAlertOpen: !prevState.isAlertOpen\r\n            }))\r\n            return \r\n        }\r\n        this.setState({isAlertOpen: false})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"button__wrapper\" ref={this.thisRef}>\r\n                <button type=\"button\" className=\"list__del-button\"><FontAwesomeIcon className=\"list__icon\" icon={faTrashAlt}/></button>\r\n                {this.state.isAlertOpen && <div className={`button__inner${this.props.theme === 'card' || 'list' ? ' button__inner--card' : ''}`}>\r\n                    <p className=\"button__inner-text\">Are you sure?</p>\r\n                    <button onClick={this.props.handleRemove} type=\"button\"className=\"button button--delete\">Delete</button>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nListDeleteButton.propTypes = {\r\n    handleRemove: PropTypes.func.isRequired,\r\n    theme: PropTypes.string\r\n}\r\n\r\n\r\nexport default ListDeleteButton;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from './Card'\r\nimport NewCard from './NewCard'\r\nimport ListDeleteButton from '../buttons/ListDeleteButton'\r\nimport { generateId, addItem, updateList, removeItem } from '../../utils/helpers'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nclass List extends Component {\r\n  state = {\r\n    list: {\r\n      name: '',\r\n      items: []\r\n    },\r\n    newCard: {\r\n      name: '',\r\n      desc: '',\r\n      startDate: '',\r\n      endDate: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      list: {\r\n        name: this.props.name,\r\n        items: this.props.items\r\n      }\r\n    })\r\n  }  \r\n  handleChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        list: {\r\n            ...prevState.list,\r\n            name: val\r\n        }\r\n    }))\r\n  }\r\n  handleCardChange = e => {\r\n    const val = e.target.value;\r\n    this.setState(prevState => ({\r\n        newCard: {\r\n            ...prevState.newCard,\r\n            name: val\r\n        }\r\n    }))\r\n  }\r\n  handleCardRemove = id => {\r\n    const updatedCards = removeItem(this.props.items, id)\r\n    const updatedList = {\r\n        ...this.state.list,\r\n        id: this.props.id,\r\n        items: updatedCards\r\n    }\r\n    this.setState(prevState => ({\r\n      list: {\r\n          ...prevState.list,\r\n          items: updatedCards\r\n      }\r\n  }))\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  handleCardEdit = card => {\r\n    const updatedCards = updateList(this.props.items, card);\r\n    const updatedList = {\r\n      ...this.state.list,\r\n      id: this.props.id,\r\n      items: updatedCards\r\n    }\r\n    this.setState(prevState => ({\r\n        list: {\r\n            ...prevState.list,\r\n            items: updatedCards\r\n        }\r\n    }))\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const updatedList = {\r\n      ...this.state.list,\r\n      id: this.props.id,\r\n      name: this.state.list.name\r\n    }\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  handleCardSubmit = e => {\r\n    e.preventDefault()\r\n    const newCard = {\r\n      ...this.state.newCard,\r\n      id: generateId(),\r\n      name: this.state.newCard.name,\r\n    }\r\n    const updatedItems = addItem(this.state.list.items, newCard)\r\n    const updatedList = {\r\n      ...this.state.list,\r\n      id: this.props.id,\r\n      items: updatedItems\r\n    }\r\n    this.setState(prevState => ({\r\n      list: {\r\n        ...prevState.list,\r\n        items: updatedItems\r\n      },\r\n      newCard: {\r\n          ...prevState.newCard,\r\n          name: ''\r\n      }\r\n    }))\r\n    this.props.handleListChange(updatedList);\r\n  }\r\n  render() {\r\n    return (\r\n      <Droppable droppableId={this.props.id} type=\"card\">\r\n        {(provided, snapshot) => (\r\n          <div className={`list${snapshot.isDraggingOver ? ' list--drag-over' : ''}`}>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"list__header\">\r\n                  <input onChange={this.handleChange} onBlur={this.handleSubmit} className=\"list__title\" value={this.state.list.name}/>\r\n                  <FontAwesomeIcon className=\"list__icon list__icon--hand\" icon={faHandPaper}/>\r\n                  <ListDeleteButton theme=\"list\" handleRemove={() => this.props.handleRemove(this.props.id)} />\r\n              </div>\r\n            </form>\r\n            {/* <Scrollbars> */}\r\n            <div className=\"list__cards-wrapper\" ref={provided.innerRef}>\r\n            \r\n            {this.props.items.map((card, index) => ( \r\n              <Draggable\r\n                  type=\"card\"\r\n                  key={card.id}\r\n                  draggableId={card.id}\r\n                  index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        className={snapshot.isDragging ? 'card__wrapper card__wrapper-active' : 'card__wrapper'}\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={provided.draggableProps.style}>\r\n                        <Card key={card.id} {...card} handleCardRemove={this.handleCardRemove} handleCardEdit={this.handleCardEdit}/>\r\n                      </div>\r\n                    )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n            <NewCard \r\n              newCard={this.state.newCard} \r\n              handleChange={this.handleCardChange}\r\n              handleSubmit={this.handleCardSubmit}/>\r\n              \r\n            </div>\r\n            {/* </Scrollbars> */}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    )\r\n  }\r\n}\r\nList.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    items: PropTypes.array.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n    handleListChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default List;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst NewList = ({newListName, handleSubmit, handleChange}) => {\r\n    return (\r\n        <div className=\"list new-list\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input onChange={handleChange} placeholder=\"+ Add board\" className=\"new-list__input\" value={newListName} type=\"text\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nNewList.propTypes = {\r\n    newListName: PropTypes.string.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NewList;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from  './List'\r\nimport NewList from './NewList'\r\nimport { generateId, addItem, updateList, removeItem, findById, reorder, move } from '../../utils/helpers'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nclass BoardLists extends Component {\r\n  state = {\r\n    newListName: ''\r\n  }\r\n  handleChange = e => {\r\n    this.setState({newListName: e.target.value})\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const newList = {\r\n      \"id\": generateId(),\r\n      \"name\": this.state.newListName,\r\n      \"items\": []\r\n    }\r\n    this.setState({newListName: ''})\r\n    const updatedLists = addItem(this.props.lists, newList);\r\n    this.props.handleListsUpdate(updatedLists);\r\n  }\r\n  handleRemove = id => {\r\n    const updatedLists = removeItem(this.props.lists, id);\r\n    this.props.handleListsUpdate(updatedLists);\r\n  }\r\n  handleListChange = list => {\r\n    const updatedLists = updateList(this.props.lists, list);\r\n    this.props.handleListsUpdate(updatedLists);\r\n  }\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n    \r\n    if (!destination) {\r\n        return;\r\n    }\r\n\r\n    if (source.droppableId === this.props.id) {\r\n      const items = reorder(\r\n        this.props.lists,\r\n        source.index,\r\n        destination.index\r\n      )\r\n      this.props.handleListsUpdate(items)\r\n    } else if (source.droppableId === destination.droppableId) {\r\n        const list = findById(source.droppableId, this.props.lists)\r\n        const items = reorder(\r\n            list.items,\r\n            source.index,\r\n            destination.index\r\n        );\r\n        const newList = {\r\n          ...list,\r\n          items: items\r\n        }\r\n        this.handleListChange(newList)\r\n    } else {\r\n        const sourceList = findById(source.droppableId, this.props.lists)\r\n        const destList = findById(destination.droppableId, this.props.lists)\r\n        const result = move(\r\n            sourceList.items,\r\n            destList.items,\r\n            source,\r\n            destination\r\n        );\r\n        const newSourceList = {\r\n          ...sourceList,\r\n          items: result[source.droppableId]\r\n        }\r\n        const newDestList = {\r\n          ...destList,\r\n          items: result[destination.droppableId]\r\n        }\r\n        this.handleListChange(newSourceList)\r\n        this.handleListChange(newDestList)\r\n      }\r\n  }\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <div className=\"board-lists__wrapper\">\r\n              <Droppable droppableId={this.props.id} direction=\"horizontal\" type=\"list\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  className=\"board-lists\"\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {this.props.lists.map((list, index) => (\r\n                    <Draggable key={list.id} draggableId={list.id} index={index} type=\"list\">\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}>\r\n                          <List handleListChange={this.handleListChange} handleRemove={this.handleRemove} key={list.id} {...list}/>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <NewList\r\n                    newListName={this.state.newListName}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit} />\r\n                </div>\r\n              )}\r\n              </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n    )\r\n  }\r\n} \r\n\r\nBoardLists.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    lists: PropTypes.array.isRequired,\r\n    handleListsUpdate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardLists;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport BoardHeader from '../components/board/BoardHeader'\r\nimport BoardLists from '../components/board/BoardLists'\r\nimport { generateId, addItem } from '../utils/helpers'\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        board: {\r\n            name: '',\r\n            theme: '',\r\n            lists: []\r\n        },\r\n        display: \"kanban\",\r\n        newList: ''\r\n    }\r\n    componentDidMount() {\r\n        this.setState({board: this.props.board})\r\n    }\r\n    handleUpdate = update => {\r\n        const upadtedBoard = {\r\n            ...this.state.board,\r\n            id: this.props.id,\r\n            name: update.name,\r\n            theme: update.theme\r\n        }\r\n        this.setState(prevState => ({\r\n            board: {\r\n                ...prevState.board,\r\n                name: update.name,\r\n                theme: update.theme\r\n            }\r\n        }))\r\n        this.props.updatedBoard(upadtedBoard)\r\n    }\r\n    handleDisplayChange = e => {\r\n        this.setState({display: e.target.value})\r\n    }\r\n    handleAddListChange = e => {\r\n        this.setState({newList: e.target.value})\r\n    }\r\n    handleAddListSubmit = e => {\r\n        e.preventDefault()\r\n        const newList = {\r\n            id: generateId(),\r\n            name: this.state.newList,\r\n            items: []\r\n        }\r\n        const addList = addItem(this.state.board.lists, newList)\r\n        const upadtedBoard = {\r\n            ...this.state.board,\r\n            lists: addList\r\n        }\r\n        this.setState(prevState => ({\r\n            board: {\r\n                ...prevState.board,\r\n                lists: addList\r\n            },\r\n            display: \"default\",\r\n            newList: ''\r\n        }))\r\n        this.props.updatedBoard(upadtedBoard)\r\n    }\r\n    handleListsUpdate = lists => {\r\n        const upadtedBoard = {\r\n            ...this.state.board,\r\n            lists: lists\r\n        }\r\n        this.setState(prevState => ({\r\n            board: {\r\n                ...prevState.board,\r\n                lists: lists\r\n            }\r\n        })) \r\n        this.props.updatedBoard(upadtedBoard)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`board ${this.state.board.theme.toLowerCase().split(' ').join('-')}`}>\r\n                <BoardHeader id={this.props.id} \r\n                    name={this.state.board.name} \r\n                    handleRemove={this.props.handleRemove} \r\n                    handleDisplayChange={this.handleDisplayChange}\r\n                    board={this.props.board} \r\n                    display={this.state.display}\r\n                    handleUpdate={this.handleUpdate} />\r\n                <BoardLists \r\n                    id={this.props.id}\r\n                    lists={this.state.board.lists} \r\n                    handleListsUpdate={this.handleListsUpdate} />\r\n                <div className=\"theme-background\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n  board: PropTypes.object.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n  updatedBoard: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Board; \r\n","import { mapBoards, mapBoard, mapBoardToApi } from './helpers'\r\n\r\nconst baseUrl = \"http://localhost:56935/api/boards\"\r\n \r\nexport const loadBoards = () => {\r\n    return fetch(baseUrl) \r\n        .then(res => res.json())\r\n        .then(res => mapBoards(res))\r\n}\r\n\r\n// export const saveBoards = boards => {\r\n//     localStorage.setItem('boards', JSON.stringify(boards))\r\n// }\r\n\r\n// export const deleteBoards = () => {\r\n//   localStorage.clear()\r\n// }\r\n\r\n\r\nexport const createBoard = item => {\r\n    const board = mapBoardToApi(item)\r\n    return fetch(baseUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(board)\r\n    }).then(res => res.json())\r\n    // .then(res => mapBoard(res))\r\n  }\r\n\r\nexport const saveBoard = item => {\r\nconst board = mapBoardToApi(item)\r\n  return fetch(`${baseUrl}/${item.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(board)\r\n  }).then(res => res.json())\r\n//   .then(res => mapBoard(res))\r\n}\r\n\r\nexport const destroyBoard = id => {\r\n  return fetch(`${baseUrl}/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n}","import React, { Component } from 'react';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Board from './pages/Board'\r\nimport { findById, addItem, updateList, removeItem } from './utils/helpers'\r\nimport { loadBoards, createBoard, saveBoard, destroyBoard } from './utils/service'\r\n\r\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\"; \r\nimport './styles/styles.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    boards: []\r\n  }\r\n  componentDidMount() {\r\n    loadBoards()\r\n      .then(boards => this.setState({boards}))\r\n  }\r\n  // handleCreate = newBoard => {\r\n  //   const updatedBoards = addItem(this.state.boards, newBoard)\r\n  //   this.setState({boards: updatedBoards})\r\n  //   saveBoards(updatedBoards)\r\n  // }\r\n  // handleRemove = id => {\r\n  //   const updatedBoards = removeItem(this.state.boards, id)\r\n  //   this.setState({boards: updatedBoards})\r\n  //   saveBoards(updatedBoards)\r\n  // }\r\n  // updatedBoard = board => {\r\n  //   const upadtedBoard = updateList(this.state.boards, board)\r\n  //   this.setState({boards: upadtedBoard})\r\n  //   saveBoards(upadtedBoard)\r\n  // }\r\n\r\n  handleCreate = newBoard => {\r\n    const updatedBoards = addItem(this.state.boards, newBoard)\r\n    this.setState({boards: updatedBoards})\r\n    createBoard(newBoard)\r\n      .then(() => console.log(`Board ${newBoard.name} added`))\r\n  }\r\n  handleRemove = id => {\r\n    const updatedBoards = removeItem(this.state.boards, id)\r\n    this.setState({boards: updatedBoards})\r\n    destroyBoard(id)\r\n      .then(() => console.log(`Board with ID ${id} removed`))\r\n  }\r\n  updatedBoard = board => {\r\n    const upadtedBoard = updateList(this.state.boards, board)\r\n    this.setState({boards: upadtedBoard})\r\n    saveBoard(board)\r\n      .then(() => console.log(`Board ${board.name} updated`))\r\n  }\r\n\r\n  render() {  \r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path='/' render={props => (<Dashboard \r\n                    handleCreate={this.handleCreate} \r\n                    boards={this.state.boards} \r\n                    {...props}/>)\r\n                }/>\r\n                <Route path=\"/board/:id\" \r\n                render={props => {\r\n                    const ifCorrectID = findById(props.match.params.id, this.state.boards)\r\n                    return (ifCorrectID \r\n                      ? <Board id={props.match.params.id} \r\n                          board={ifCorrectID} \r\n                          handleRemove={this.handleRemove} \r\n                          updatedBoard={this.updatedBoard} /> \r\n                      : <Redirect to='/' />)\r\n                  }\r\n                }/>\r\n                <Redirect to='/'/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  } \r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}